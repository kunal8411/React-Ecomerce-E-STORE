{"ast":null,"code":"import { GET_BOOKMARK_LIST, ADD_TO_MY_BOOKMARK, ADD_NEW_BOOKMARK, REMOVE_BOOKMARK, REMOVE_FROM_MY_BOOKMARK, UPDATE_BOOKMARK, UPDATE_MY_BOOKMARK } from '../../redux/actionTypes';\nconst initial_state = {\n  bookmark: [],\n  mybookmarkdata: [],\n  loading: false\n};\nexport default ((state = initial_state, action) => {\n  switch (action.type) {\n    case GET_BOOKMARK_LIST:\n      return { ...state,\n        bookmark: action.bookmark.data,\n        loading: true\n      };\n\n    case ADD_TO_MY_BOOKMARK:\n      return { ...state,\n        mybookmarkdata: [...state.mybookmarkdata, { ...action.payload.mybookmarkdata\n        }]\n      };\n\n    case ADD_NEW_BOOKMARK:\n      state.bookmark.push({\n        id: state.bookmark.length + 1,\n        fillstar: false,\n        image: action.payload.image_url,\n        title: action.payload.bookmarkdata.title,\n        website_url: action.payload.bookmarkdata.url,\n        desc: action.payload.bookmarkdata.desc,\n        collection: action.payload.bookmarkdata.collection\n      });\n      return { ...state,\n        bookmark: state.bookmark\n      };\n\n    case UPDATE_BOOKMARK:\n      return { ...state,\n        bookmark: state.bookmark.map(item => item.id === action.payload.id ? { ...item,\n          id: action.payload.id,\n          fillstar: action.payload.updatedata.fillstar,\n          image: action.payload.image_url,\n          title: action.payload.updatedata.title,\n          website_url: action.payload.updatedata.url,\n          desc: action.payload.updatedata.desc,\n          collection: action.payload.updatedata.collection\n        } : item)\n      };\n\n    case UPDATE_MY_BOOKMARK:\n      return { ...state,\n        mybookmarkdata: state.mybookmarkdata.map(item => item.id === action.payload.id ? { ...item,\n          id: action.payload.id,\n          fillstar: action.payload.updateMydata.fillstar,\n          image: action.payload.image_url,\n          title: action.payload.updateMydata.title,\n          website_url: action.payload.updateMydata.url,\n          desc: action.payload.updateMydata.desc,\n          collection: action.payload.updateMydata.collection\n        } : item)\n      };\n\n    case REMOVE_BOOKMARK:\n      let new_bookmark = state.bookmark.filter(item => action.removeid !== item.id);\n      return { ...state,\n        bookmark: new_bookmark\n      };\n\n    case REMOVE_FROM_MY_BOOKMARK:\n      let new_my_bookmark = state.mybookmarkdata.filter(item => action.bookmarkid !== item.id);\n      return { ...state,\n        mybookmarkdata: new_my_bookmark\n      };\n\n    default:\n      return { ...state\n      };\n  }\n});","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/redux/bookmark/reducer.js"],"names":["GET_BOOKMARK_LIST","ADD_TO_MY_BOOKMARK","ADD_NEW_BOOKMARK","REMOVE_BOOKMARK","REMOVE_FROM_MY_BOOKMARK","UPDATE_BOOKMARK","UPDATE_MY_BOOKMARK","initial_state","bookmark","mybookmarkdata","loading","state","action","type","data","payload","push","id","length","fillstar","image","image_url","title","bookmarkdata","website_url","url","desc","collection","map","item","updatedata","updateMydata","new_bookmark","filter","removeid","new_my_bookmark","bookmarkid"],"mappings":"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","sourcesContent":["import {GET_BOOKMARK_LIST,\n    ADD_TO_MY_BOOKMARK,\n    ADD_NEW_BOOKMARK,\n    REMOVE_BOOKMARK,\n    REMOVE_FROM_MY_BOOKMARK,\n    UPDATE_BOOKMARK,\n    UPDATE_MY_BOOKMARK} from '../../redux/actionTypes'\n\n\nconst initial_state = {\nbookmark:[],\nmybookmarkdata:[],\nloading: false,\n}\n\nexport default (state = initial_state, action) => {\n\nswitch (action.type) {\n\n    case GET_BOOKMARK_LIST:\n        return {...state,bookmark:action.bookmark.data, loading: true,};\n\n    case ADD_TO_MY_BOOKMARK:\n        return {...state,mybookmarkdata:[...state.mybookmarkdata, { ...action.payload.mybookmarkdata}]};\n    \n    case ADD_NEW_BOOKMARK:\n        state.bookmark.push({\n            id: state.bookmark.length + 1,\n            fillstar:false,\n            image: action.payload.image_url,\n            title: action.payload.bookmarkdata.title,\n            website_url: action.payload.bookmarkdata.url,\n            desc: action.payload.bookmarkdata.desc,\n            collection:action.payload.bookmarkdata.collection\n        })\n    return {...state,bookmark:state.bookmark};\n    \n    case UPDATE_BOOKMARK:\n        return {\n            ...state,bookmark: state.bookmark.map(item => item.id === action.payload.id ?\n                { ...item, \n                    id: action.payload.id,\n                    fillstar:action.payload.updatedata.fillstar,\n                    image: action.payload.image_url,\n                    title: action.payload.updatedata.title,\n                    website_url: action.payload.updatedata.url,\n                    desc: action.payload.updatedata.desc,\n                    collection:action.payload.updatedata.collection\n                } : \n                item\n            ) \n        };\n    \n    case UPDATE_MY_BOOKMARK:\n            return {\n                ...state,mybookmarkdata: state.mybookmarkdata.map(item => item.id === action.payload.id ?\n                    { ...item, \n                        id: action.payload.id,\n                        fillstar:action.payload.updateMydata.fillstar,\n                        image: action.payload.image_url,\n                        title: action.payload.updateMydata.title,\n                        website_url: action.payload.updateMydata.url,\n                        desc: action.payload.updateMydata.desc,\n                        collection:action.payload.updateMydata.collection\n                    } : \n                    item\n                ) \n            };\n\n    case REMOVE_BOOKMARK:\n        let new_bookmark = state.bookmark.filter(item=> action.removeid !== item.id)\n        return{...state,bookmark: new_bookmark}\n    \n    case REMOVE_FROM_MY_BOOKMARK:\n        let new_my_bookmark = state.mybookmarkdata.filter(item=> action.bookmarkid !== item.id)\n        return{...state,mybookmarkdata: new_my_bookmark}\n            \n    default: return { ...state };\n}\n\n}"]},"metadata":{},"sourceType":"module"}