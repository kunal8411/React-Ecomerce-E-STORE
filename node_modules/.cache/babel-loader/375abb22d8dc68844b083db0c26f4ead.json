{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore } from 'redux-persist'; // middlewares\n\nimport createSagaMiddleware from 'redux-saga'; // Import custom components\n\nimport reducers from '../redux';\nimport rootSagas from \"../sagas\";\nconst sagaMiddleware = createSagaMiddleware();\n/* Create a Redux store that holds the app state. */\n\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose; // const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n// const store = createStore(reducers, enhancer);\n// \n\nexport const store = createStore(reducers, applyMiddleware(sagaMiddleware));\nexport const persistor = persistStore(store); // sagaMiddleware.run(rootSagas)\n\nexport default {\n  store,\n  persistor\n}; // export default store;","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/store/index.js"],"names":["createStore","applyMiddleware","compose","persistStore","createSagaMiddleware","reducers","rootSagas","sagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAAQC,YAAR,QAA2B,eAA3B,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA;;AAEA,MAAMI,gBAAgB,GACtB,OAAOC,MAAP,KAAkB,QAAlB,IACAA,MAAM,CAACC,oCADP,GAEED,MAAM,CAACC,oCAAP,CAA4C,CAC1C;AAD0C,CAA5C,CAFF,GAIOR,OALP,C,CAOA;AACA;AAEA;;AAIA,OAAO,MAAMS,KAAK,GAAGX,WAAW,CAACK,QAAD,EAAWJ,eAAe,CAACM,cAAD,CAA1B,CAAzB;AAGP,OAAO,MAAMK,SAAS,GAAET,YAAY,CAACQ,KAAD,CAA7B,C,CACP;;AACA,eAAe;AAACA,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAf,C,CAGA","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport {persistStore} from 'redux-persist'\n// middlewares\nimport createSagaMiddleware from 'redux-saga'\n\n// Import custom components\nimport reducers from '../redux';\nimport rootSagas from \"../sagas\";\n\nconst sagaMiddleware = createSagaMiddleware()\n\n/* Create a Redux store that holds the app state. */\n\nconst composeEnhancers =\ntypeof window === 'object' &&\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n  }) : compose;\n\n// const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n// const store = createStore(reducers, enhancer);\n\n// \n\n\n\nexport const store = createStore(reducers, applyMiddleware(sagaMiddleware));\n\n\nexport const persistor =persistStore(store)\n// sagaMiddleware.run(rootSagas)\nexport default {store, persistor};\n\n\n// export default store;\n\n"]},"metadata":{},"sourceType":"module"}