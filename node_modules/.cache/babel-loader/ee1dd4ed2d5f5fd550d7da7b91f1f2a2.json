{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // middlewares\n\nimport createSagaMiddleware from 'redux-saga'; // Import custom components\n\nimport reducers from '../redux';\nimport rootSagas from \"../sagas\";\nconst sagaMiddleware = createSagaMiddleware();\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\n/* Create a Redux store that holds the app state. */\n\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\nconst store = createStore(persistedReducer, enhancer);\nlet persistor = persistStore(store);\nsagaMiddleware.run(rootSagas);\nexport default {\n  persistor,\n  store\n};","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/store/index.js"],"names":["createStore","applyMiddleware","compose","persistStore","persistReducer","storage","createSagaMiddleware","reducers","rootSagas","sagaMiddleware","persistConfig","key","persistedReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,MAAMI,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA;AAFoB,CAAtB;AAIA,MAAMO,gBAAgB,GAAGR,cAAc,CAACM,aAAD,EAAgBH,QAAhB,CAAvC;AACA;;AAEA,MAAMM,gBAAgB,GACtB,OAAOC,MAAP,KAAkB,QAAlB,IACAA,MAAM,CAACC,oCADP,GAEED,MAAM,CAACC,oCAAP,CAA4C,CAC1C;AAD0C,CAA5C,CAFF,GAIOb,OALP;AAOA,MAAMc,QAAQ,GAAGH,gBAAgB,CAACZ,eAAe,CAACQ,cAAD,CAAhB,CAAjC;AACA,MAAMQ,KAAK,GAAGjB,WAAW,CAACY,gBAAD,EAAkBI,QAAlB,CAAzB;AACA,IAAIE,SAAS,GAAGf,YAAY,CAACc,KAAD,CAA5B;AAEAR,cAAc,CAACU,GAAf,CAAmBX,SAAnB;AAGA,eAAe;AAACU,EAAAA,SAAD;AAAWD,EAAAA;AAAX,CAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'\n// middlewares\nimport createSagaMiddleware from 'redux-saga'\n\n// Import custom components\nimport reducers from '../redux';\nimport rootSagas from \"../sagas\";\n\nconst sagaMiddleware = createSagaMiddleware()\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, reducers);\n/* Create a Redux store that holds the app state. */\n\nconst composeEnhancers =\ntypeof window === 'object' &&\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n  }) : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\nconst store = createStore(persistedReducer,enhancer);\nlet persistor = persistStore(store)\n\nsagaMiddleware.run(rootSagas)\n\n\nexport default {persistor,store};\n\n"]},"metadata":{},"sourceType":"module"}