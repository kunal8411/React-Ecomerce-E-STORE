{"ast":null,"code":"import { GET_MEMBERS, GET_MEMBERS_SUCCESS, GET_CHATS, GET_CHATS_SUCCESS, CHANGE_CHAT, CREATE_CHAT, UPDATE_SELECTED_USER, SEARCH_MEMBER, SEND_MESSAGE, REPLY_BY_SELECTED_USER } from '../../redux/actionTypes';\nconst initial_state = {\n  allMembers: null,\n  members: null,\n  chats: null,\n  loading: false,\n  currentUser: null,\n  selectedUser: null\n};\nexport default ((state = initial_state, action) => {\n  switch (action.type) {\n    case GET_MEMBERS:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_MEMBERS_SUCCESS:\n      const members = action.payload;\n      const currentUser = members.chats[0];\n      return { ...state,\n        loading: false,\n        allMembers: members,\n        members: members.chats,\n        currentUser: currentUser\n      };\n\n    case GET_CHATS:\n      return { ...state,\n        chats: action.payload.chats,\n        loading: true\n      };\n\n    case GET_CHATS_SUCCESS:\n      return { ...state,\n        loading: false,\n        chats: action.payload.chats,\n        selectedUser: state.allMembers.chats.find(x => x.id === action.payload.selectedUser)\n      };\n\n    case CHANGE_CHAT:\n      return { ...state,\n        selectedUser: state.allMembers.chats.find(x => x.id === action.payload)\n      };\n\n    case CREATE_CHAT:\n      return { ...state\n      };\n\n    case SEARCH_MEMBER:\n      if (action.payload === '') {\n        return { ...state,\n          members: state.allMembers.chats\n        };\n      } else {\n        const keyword = action.payload.toLowerCase();\n        const searchedMembers = state.allMembers.chats.filter(member => member.name.toLowerCase().indexOf(keyword) > -1);\n        return { ...state,\n          members: searchedMembers\n        };\n      }\n\n    case SEND_MESSAGE:\n      return { ...state\n      };\n\n    case REPLY_BY_SELECTED_USER:\n      return { ...state\n      };\n\n    case UPDATE_SELECTED_USER:\n      return { ...state,\n        updateSelectedUser: state.allMembers.chats.find(x => x.id === action.payload.selectedUser)\n      };\n\n    default:\n      return { ...state\n      };\n  }\n});","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/redux/chat/reducer.js"],"names":["GET_MEMBERS","GET_MEMBERS_SUCCESS","GET_CHATS","GET_CHATS_SUCCESS","CHANGE_CHAT","CREATE_CHAT","UPDATE_SELECTED_USER","SEARCH_MEMBER","SEND_MESSAGE","REPLY_BY_SELECTED_USER","initial_state","allMembers","members","chats","loading","currentUser","selectedUser","state","action","type","payload","find","x","id","keyword","toLowerCase","searchedMembers","filter","member","name","indexOf","updateSelectedUser"],"mappings":"AAAA,SACIA,WADJ,EAEIC,mBAFJ,EAGIC,SAHJ,EAIIC,iBAJJ,EAKIC,WALJ,EAMIC,WANJ,EAOIC,oBAPJ,EAQIC,aARJ,EASIC,YATJ,EAUIC,sBAVJ,QAYO,yBAZP;AAeA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAE,IADM;AAElBC,EAAAA,OAAO,EAAE,IAFS;AAGlBC,EAAAA,KAAK,EAAE,IAHW;AAIlBC,EAAAA,OAAO,EAAE,KAJS;AAKlBC,EAAAA,WAAW,EAAE,IALK;AAMlBC,EAAAA,YAAY,EAAE;AANI,CAAtB;AAQA,gBAAe,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKnB,WAAL;AACI,aAAO,EAAE,GAAGiB,KAAL;AAAYH,QAAAA,OAAO,EAAE;AAArB,OAAP;;AAEJ,SAAKb,mBAAL;AACI,YAAMW,OAAO,GAAGM,MAAM,CAACE,OAAvB;AACA,YAAML,WAAW,GAAGH,OAAO,CAACC,KAAR,CAAc,CAAd,CAApB;AACA,aAAO,EAAE,GAAGI,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BH,QAAAA,UAAU,EAAEC,OAAxC;AAAiDA,QAAAA,OAAO,EAAEA,OAAO,CAACC,KAAlE;AAAyEE,QAAAA,WAAW,EAAEA;AAAtF,OAAP;;AAEJ,SAAKb,SAAL;AACI,aAAO,EAAE,GAAGe,KAAL;AAAWJ,QAAAA,KAAK,EAACK,MAAM,CAACE,OAAP,CAAeP,KAAhC;AAAuCC,QAAAA,OAAO,EAAE;AAAhD,OAAP;;AAEJ,SAAKX,iBAAL;AACI,aAAO,EAAE,GAAGc,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP,KAAlD;AAAyDG,QAAAA,YAAY,EAAEC,KAAK,CAACN,UAAN,CAAiBE,KAAjB,CAAuBQ,IAAvB,CAA4BC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAAP,CAAeJ,YAAzD;AAAvE,OAAP;;AAEJ,SAAKZ,WAAL;AACI,aAAO,EAAE,GAAGa,KAAL;AAAYD,QAAAA,YAAY,EAAEC,KAAK,CAACN,UAAN,CAAiBE,KAAjB,CAAuBQ,IAAvB,CAA4BC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAAjD;AAA1B,OAAP;;AAEJ,SAAKf,WAAL;AACI,aAAO,EAAE,GAAGY;AAAL,OAAP;;AAGJ,SAAKV,aAAL;AACI,UAAIW,MAAM,CAACE,OAAP,KAAmB,EAAvB,EAA2B;AACvB,eAAO,EAAE,GAAGH,KAAL;AAAYL,UAAAA,OAAO,EAAEK,KAAK,CAACN,UAAN,CAAiBE;AAAtC,SAAP;AACH,OAFD,MAEO;AACH,cAAMW,OAAO,GAAGN,MAAM,CAACE,OAAP,CAAeK,WAAf,EAAhB;AACA,cAAMC,eAAe,GAAGT,KAAK,CAACN,UAAN,CAAiBE,KAAjB,CAAuBc,MAAvB,CAA+BC,MAAD,IAAaA,MAAM,CAACC,IAAP,CAAYJ,WAAZ,GAA0BK,OAA1B,CAAkCN,OAAlC,IAA6C,CAAC,CAAzF,CAAxB;AACA,eAAO,EAAE,GAAGP,KAAL;AAAYL,UAAAA,OAAO,EAAEc;AAArB,SAAP;AACH;;AAEL,SAAKlB,YAAL;AACI,aAAO,EAAE,GAAGS;AAAL,OAAP;;AAEJ,SAAKR,sBAAL;AACI,aAAO,EAAE,GAAGQ;AAAL,OAAP;;AAEJ,SAAKX,oBAAL;AACI,aAAO,EAAE,GAAGW,KAAL;AAAYc,QAAAA,kBAAkB,EAAEd,KAAK,CAACN,UAAN,CAAiBE,KAAjB,CAAuBQ,IAAvB,CAA4BC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAAP,CAAeJ,YAAzD;AAAhC,OAAP;;AAEJ;AAAS,aAAO,EAAE,GAAGC;AAAL,OAAP;AAzCb;AA2CH,CA5CD","sourcesContent":["import {\n    GET_MEMBERS,\n    GET_MEMBERS_SUCCESS,\n    GET_CHATS,\n    GET_CHATS_SUCCESS,\n    CHANGE_CHAT,\n    CREATE_CHAT,\n    UPDATE_SELECTED_USER,\n    SEARCH_MEMBER,\n    SEND_MESSAGE,\n    REPLY_BY_SELECTED_USER\n\n} from '../../redux/actionTypes';\n\n\nconst initial_state = {\n    allMembers: null,\n    members: null,\n    chats: null,\n    loading: false,\n    currentUser: null,\n    selectedUser: null,\n};\nexport default (state = initial_state, action) => {\n    switch (action.type) {\n\n        case GET_MEMBERS:\n            return { ...state, loading: true };\n\n        case GET_MEMBERS_SUCCESS:\n            const members = action.payload;\n            const currentUser = members.chats[0]\n            return { ...state, loading: false, allMembers: members, members: members.chats, currentUser: currentUser };\n\n        case GET_CHATS:\n            return { ...state,chats:action.payload.chats, loading: true };\n\n        case GET_CHATS_SUCCESS:\n            return { ...state, loading: false, chats: action.payload.chats, selectedUser: state.allMembers.chats.find(x => x.id === action.payload.selectedUser) };\n\n        case CHANGE_CHAT:\n            return { ...state, selectedUser: state.allMembers.chats.find(x => x.id === action.payload) };\n\n        case CREATE_CHAT:\n            return { ...state };\n\n\n        case SEARCH_MEMBER:\n            if (action.payload === '') {\n                return { ...state, members: state.allMembers.chats };\n            } else {\n                const keyword = action.payload.toLowerCase();\n                const searchedMembers = state.allMembers.chats.filter((member) =>  member.name.toLowerCase().indexOf(keyword) > -1);\n                return { ...state, members: searchedMembers }\n            }\n\n        case SEND_MESSAGE:\n            return { ...state };\n\n        case REPLY_BY_SELECTED_USER:\n            return { ...state };\n    \n        case UPDATE_SELECTED_USER:\n            return { ...state, updateSelectedUser: state.allMembers.chats.find(x => x.id === action.payload.selectedUser) }\n\n        default: return { ...state };\n    }\n}"]},"metadata":{},"sourceType":"module"}