{"ast":null,"code":"import { NEW_TASK, REMOVE_TASK, FETCH_ALL_TASK } from '../../redux/actionTypes';\nconst initial_state = {\n  task: [],\n  newtaskdata: []\n};\nexport default ((state = initial_state, action) => {\n  switch (action.type) {\n    case FETCH_ALL_TASK:\n      return { ...state,\n        task: action.payload\n      };\n\n    case NEW_TASK:\n      state.newtaskdata.push({\n        id: state.newtaskdata.length + 1,\n        title: action.payload.newtaskdata.title,\n        desc: action.payload.newtaskdata.desc,\n        collection: action.payload.newtaskdata.collection\n      });\n      state.task.push({\n        id: state.newtaskdata.length + 1,\n        title: action.payload.newtaskdata.title,\n        desc: action.payload.newtaskdata.desc,\n        collection: action.payload.newtaskdata.collection\n      });\n      return { ...state,\n        newtaskdata: state.newtaskdata,\n        task: state.task\n      };\n\n    case REMOVE_TASK:\n      let new_task = state.newtaskdata.filter(item => action.id !== item.id);\n      let created_task = state.task.filter(item => action.id !== item.id);\n      return { ...state,\n        newtaskdata: new_task,\n        task: created_task\n      };\n\n    default:\n      return { ...state\n      };\n  }\n});","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/redux/task/reducer.js"],"names":["NEW_TASK","REMOVE_TASK","FETCH_ALL_TASK","initial_state","task","newtaskdata","state","action","type","payload","push","id","length","title","desc","collection","new_task","filter","item","created_task"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,WAAjB,EAA6BC,cAA7B,QAAkD,yBAAlD;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAC,EADa;AAElBC,EAAAA,WAAW,EAAC;AAFM,CAAtB;AAKA,gBAAe,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKN,cAAL;AACQ,aAAO,EAAC,GAAGI,KAAJ;AAAUF,QAAAA,IAAI,EAACG,MAAM,CAACE;AAAtB,OAAP;;AAER,SAAKT,QAAL;AACQM,MAAAA,KAAK,CAACD,WAAN,CAAkBK,IAAlB,CAAuB;AACnBC,QAAAA,EAAE,EAAEL,KAAK,CAACD,WAAN,CAAkBO,MAAlB,GAA2B,CADZ;AAEnBC,QAAAA,KAAK,EAAEN,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BQ,KAFf;AAGnBC,QAAAA,IAAI,EAAEP,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BS,IAHd;AAInBC,QAAAA,UAAU,EAACR,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BU;AAJnB,OAAvB;AAMAT,MAAAA,KAAK,CAACF,IAAN,CAAWM,IAAX,CAAgB;AACZC,QAAAA,EAAE,EAAEL,KAAK,CAACD,WAAN,CAAkBO,MAAlB,GAA2B,CADnB;AAEZC,QAAAA,KAAK,EAAEN,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BQ,KAFtB;AAGZC,QAAAA,IAAI,EAAEP,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BS,IAHrB;AAIZC,QAAAA,UAAU,EAACR,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BU;AAJ1B,OAAhB;AAMJ,aAAO,EAAC,GAAGT,KAAJ;AAAUD,QAAAA,WAAW,EAACC,KAAK,CAACD,WAA5B;AAAwCD,QAAAA,IAAI,EAACE,KAAK,CAACF;AAAnD,OAAP;;AAEJ,SAAKH,WAAL;AACQ,UAAIe,QAAQ,GAAGV,KAAK,CAACD,WAAN,CAAkBY,MAAlB,CAAyBC,IAAI,IAAGX,MAAM,CAACI,EAAP,KAAcO,IAAI,CAACP,EAAnD,CAAf;AACA,UAAIQ,YAAY,GAAGb,KAAK,CAACF,IAAN,CAAWa,MAAX,CAAkBC,IAAI,IAAGX,MAAM,CAACI,EAAP,KAAcO,IAAI,CAACP,EAA5C,CAAnB;AACA,aAAM,EAAC,GAAGL,KAAJ;AAAUD,QAAAA,WAAW,EAAEW,QAAvB;AAAgCZ,QAAAA,IAAI,EAAEe;AAAtC,OAAN;;AAER;AAAS,aAAO,EAAE,GAAGb;AAAL,OAAP;AAzBb;AA2BH,CA5BD","sourcesContent":["import {NEW_TASK,REMOVE_TASK,FETCH_ALL_TASK} from '../../redux/actionTypes'\nconst initial_state = {\n    task:[],\n    newtaskdata:[],\n}\n\nexport default (state = initial_state, action) => {\n    switch (action.type) {\n\n        case FETCH_ALL_TASK:\n                return {...state,task:action.payload }\n\n        case NEW_TASK:\n                state.newtaskdata.push({\n                    id: state.newtaskdata.length + 1,\n                    title: action.payload.newtaskdata.title,\n                    desc: action.payload.newtaskdata.desc,\n                    collection:action.payload.newtaskdata.collection\n                })\n                state.task.push({\n                    id: state.newtaskdata.length + 1,\n                    title: action.payload.newtaskdata.title,\n                    desc: action.payload.newtaskdata.desc,\n                    collection:action.payload.newtaskdata.collection\n                })\n            return {...state,newtaskdata:state.newtaskdata,task:state.task};\n\n        case REMOVE_TASK:\n                let new_task = state.newtaskdata.filter(item=> action.id !== item.id)\n                let created_task = state.task.filter(item=> action.id !== item.id)\n                return{...state,newtaskdata: new_task,task: created_task}\n                \n        default: return { ...state };\n    }\n}"]},"metadata":{},"sourceType":"module"}