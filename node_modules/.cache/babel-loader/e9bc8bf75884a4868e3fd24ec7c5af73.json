{"ast":null,"code":"var _jsxFileName = \"/home/kunal/Kunal/THEMES/theme/src/components/forms/form-widgets/timepickerComponent/timepicker-two.js\";\nimport React from 'react';\nimport TimePicker from 'react-times'; // use material theme\n\nimport 'react-times/css/material/default.css'; // or you can use classic theme\n\nimport 'react-times/css/classic/default.css';\n\nclass TimePickerTwo extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      meridiem,\n      focused,\n      showTimezone,\n      timezone\n    } = props;\n    let hour = '';\n    let minute = '';\n    this.state = {\n      hour,\n      minute,\n      meridiem,\n      focused,\n      timezone,\n      showTimezone\n    };\n    this.onFocusChange = this.onFocusChange.bind(this);\n    this.onFocusChange1 = this.onFocusChange1.bind(this);\n    this.onTimeChange = this.onTimeChange.bind(this);\n    this.handleFocusedChange = this.handleFocusedChange.bind(this);\n  }\n\n  onTimeChange(options) {\n    const {\n      hour,\n      minute,\n      meridiem\n    } = options;\n    this.setState({\n      hour,\n      minute,\n      meridiem\n    });\n  }\n\n  onFocusChange(focused) {\n    this.setState({\n      focused\n    });\n  }\n\n  onFocusChange1(focused1) {\n    this.setState({\n      focused1\n    });\n  }\n\n  handleFocusedChange() {\n    const {\n      focused\n    } = this.state;\n    this.setState({\n      focused: !focused\n    });\n  }\n\n  get basicTrigger() {\n    const {\n      hour,\n      minute\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.handleFocusedChange,\n      className: \"time_picker_trigger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Click to open panel\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 34\n      }\n    }), hour, \":\", minute));\n  }\n\n  get customTrigger() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.handleFocusedChange,\n      className: \"time_picker_trigger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    });\n  }\n\n  get trigger() {\n    const {\n      customTriggerId\n    } = this.props;\n    const triggers = {\n      0: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }),\n      1: this.basicTrigger,\n      2: this.customTrigger\n    };\n    return triggers[customTriggerId] || null;\n  }\n\n  render() {\n    const {\n      hour,\n      minute,\n      focused,\n      meridiem,\n      timezone,\n      showTimezone\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time_picker_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TimePicker, {\n      trigger: this.trigger,\n      focused: focused,\n      meridiem: meridiem,\n      timezone: timezone,\n      timeMode: \"24\",\n      onFocusChange: this.onFocusChange1,\n      onTimeChange: this.onTimeChange,\n      showTimezone: showTimezone,\n      time: hour && minute ? `${hour}:${minute}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TimePickerTwo;","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/components/forms/form-widgets/timepickerComponent/timepicker-two.js"],"names":["React","TimePicker","TimePickerTwo","Component","constructor","props","meridiem","focused","showTimezone","timezone","hour","minute","state","onFocusChange","bind","onFocusChange1","onTimeChange","handleFocusedChange","options","setState","focused1","basicTrigger","customTrigger","trigger","customTriggerId","triggers","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TimePicker from 'react-times';\n// use material theme\nimport 'react-times/css/material/default.css';\n// or you can use classic theme\nimport 'react-times/css/classic/default.css';\n\nclass TimePickerTwo extends React.Component {\n  constructor(props) {\n    super(props);\n    const {  meridiem, focused, showTimezone, timezone } = props;\n    let hour = '';\n    let minute = '';\n    this.state = {\n      hour,\n      minute,\n      meridiem,\n      focused,\n      timezone,\n      showTimezone,\n    };\n\n    this.onFocusChange = this.onFocusChange.bind(this);\n    this.onFocusChange1 = this.onFocusChange1.bind(this);\n    this.onTimeChange = this.onTimeChange.bind(this);\n    this.handleFocusedChange = this.handleFocusedChange.bind(this);\n  }\n\n  onTimeChange(options) {\n    const {\n      hour,\n      minute,\n      meridiem\n    } = options;\n\n    this.setState({ hour, minute, meridiem });\n  }\n\n  onFocusChange(focused) {\n    this.setState({ focused });\n  }\n  onFocusChange1(focused1) {\n    this.setState({ focused1 });\n  }\n\n  handleFocusedChange() {\n    const { focused } = this.state;\n    this.setState({ focused: !focused });\n  }\n\n  get basicTrigger() {\n    const { hour, minute } = this.state;\n    return (\n      <div\n        onClick={this.handleFocusedChange}\n        className=\"time_picker_trigger\"\n      >\n        <div>\n          {\"Click to open panel\"}<br />\n          {hour}:{minute}\n        </div>\n      </div>\n    );\n  }\n\n  get customTrigger() {\n    return (\n      <div\n        onClick={this.handleFocusedChange}\n        className=\"time_picker_trigger\"\n      >\n      </div>\n    );\n  }\n\n  get trigger() {\n    const { customTriggerId } = this.props;\n    const triggers = {\n      0: (<div />),\n      1: this.basicTrigger,\n      2: this.customTrigger\n    };\n    return triggers[customTriggerId] || null;\n  }\n\n  render() {\n    const {\n      hour,\n      minute,\n      focused,\n      meridiem,\n      timezone,\n      showTimezone,\n    } = this.state;\n\n    return (\n        <div  className=\"time_picker_wrapper\">\n        <TimePicker\n            trigger={this.trigger}\n            focused={focused}\n            meridiem={meridiem}\n            timezone={timezone}\n            timeMode=\"24\"\n            onFocusChange={this.onFocusChange1}\n            onTimeChange={this.onTimeChange}\n            showTimezone={showTimezone}\n            time={hour && minute ? `${hour}:${minute}` : null}\n          />\n        </div>\n    );\n  }\n}\n\nexport default TimePickerTwo;\n"]},"metadata":{},"sourceType":"module"}