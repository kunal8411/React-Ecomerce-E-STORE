{"ast":null,"code":"import { GET_TODO_LIST, GET_LIST_SUCCESS, ADD_NEW_ITEM, REMOVE_ITEM, MARK_ALL_ITEMS, SELECTED_ITEM } from '../../redux/actionTypes';\nconst INIT_STATE = {\n  allTodoItems: [],\n  todoItems: [],\n  loading: false\n};\nexport default ((state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_TODO_LIST:\n      const allTodoItems = action.list.data;\n      return { ...state,\n        loading: false,\n        allTodoItems: allTodoItems\n      };\n\n    case GET_LIST_SUCCESS:\n      const liveItems = action.payload.filter(item => item.status !== \"deleted\");\n      return { ...state,\n        loading: true,\n        allTodoItems: liveItems,\n        todoItems: action.payload\n      };\n\n    case ADD_NEW_ITEM:\n      state.allTodoItems.push({\n        id: state.allTodoItems.length + 1,\n        title: action.payload.task\n      });\n      return { ...state,\n        loading: true,\n        todoItems: state.allTodoItems,\n        allTodoItems: state.allTodoItems\n      };\n\n    case SELECTED_ITEM:\n      const updatedStatus = state.allTodoItems.reduce((cartAcc, item) => {\n        if (item.id === action.payload.itemId) {\n          cartAcc.push({ ...item,\n            status: action.payload.status\n          });\n        } else {\n          cartAcc.push(item);\n        }\n\n        return cartAcc;\n      }, []);\n      return { ...state,\n        loading: true,\n        todoItems: updatedStatus,\n        allTodoItems: updatedStatus\n      };\n\n    case MARK_ALL_ITEMS:\n      const updateStatus = state.allTodoItems.reduce((cartAcc, item) => {\n        if (action.payload === false) {\n          cartAcc.push({ ...item,\n            status: 'completed'\n          });\n        } else {\n          cartAcc.push({ ...item,\n            status: 'pending'\n          });\n        }\n\n        return cartAcc;\n      }, []);\n      return { ...state,\n        loading: true,\n        todoItems: updateStatus,\n        allTodoItems: updateStatus\n      };\n\n    case REMOVE_ITEM:\n      const updatedItems = state.allTodoItems.reduce((cartAcc, item) => {\n        if (item.id === action.payload) {\n          cartAcc.push({ ...item,\n            isStatus: 'deleted'\n          });\n        } else {\n          cartAcc.push(item);\n        }\n\n        return cartAcc;\n      }, []);\n      return { ...state,\n        loading: true,\n        allTodoItems: updatedItems,\n        todoItems: updatedItems\n      };\n\n    default:\n      return { ...state\n      };\n  }\n});","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/redux/todo/reducer.js"],"names":["GET_TODO_LIST","GET_LIST_SUCCESS","ADD_NEW_ITEM","REMOVE_ITEM","MARK_ALL_ITEMS","SELECTED_ITEM","INIT_STATE","allTodoItems","todoItems","loading","state","action","type","list","data","liveItems","payload","filter","item","status","push","id","length","title","task","updatedStatus","reduce","cartAcc","itemId","updateStatus","updatedItems","isStatus"],"mappings":"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","sourcesContent":["import {\n    GET_TODO_LIST,\n    GET_LIST_SUCCESS,\n    ADD_NEW_ITEM,\n    REMOVE_ITEM,\n    MARK_ALL_ITEMS,\n    SELECTED_ITEM\n} from '../../redux/actionTypes'\n\nconst INIT_STATE = {\n    allTodoItems: [],\n    todoItems: [],\n    loading: false\n};\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n\n        case GET_TODO_LIST:\n            const allTodoItems = action.list.data;\n            return { ...state, loading: false, allTodoItems:allTodoItems };\n            \n\n        case GET_LIST_SUCCESS:\n            const liveItems = action.payload.filter((item) => item.status !== \"deleted\");\n            return { ...state, loading: true, allTodoItems: liveItems, todoItems: action.payload };\n\n        case ADD_NEW_ITEM:\n            state.allTodoItems.push({\n                id: state.allTodoItems.length + 1,\n                title: action.payload.task,\n            })\n            return { ...state, loading: true, todoItems: state.allTodoItems, allTodoItems: state.allTodoItems };\n\n        case SELECTED_ITEM:\n            const updatedStatus = state.allTodoItems.reduce((cartAcc, item) => {\n                if (item.id === action.payload.itemId) {\n                    cartAcc.push({ ...item, status: action.payload.status })\n                } else {\n                    cartAcc.push(item)\n                }\n                return cartAcc;\n            }, [])\n            return { ...state, loading: true, todoItems: updatedStatus, allTodoItems: updatedStatus };\n\n        case MARK_ALL_ITEMS:\n            const updateStatus = state.allTodoItems.reduce((cartAcc, item) => {\n                if (action.payload === false) {\n                    cartAcc.push({ ...item, status: 'completed' })\n                } else {\n                    cartAcc.push({ ...item, status: 'pending' })\n                }\n                return cartAcc;\n            }, [])\n            return { ...state, loading: true, todoItems: updateStatus, allTodoItems: updateStatus };\n\n        case REMOVE_ITEM:\n            const updatedItems = state.allTodoItems.reduce((cartAcc, item) => {\n                if (item.id === action.payload) {\n                    cartAcc.push({ ...item, isStatus: 'deleted' })\n                } else {\n                    cartAcc.push(item)\n                }\n                return cartAcc;\n            }, [])\n            return { ...state, loading: true, allTodoItems: updatedItems, todoItems: updatedItems };\n\n        default: return { ...state };\n    }\n}"]},"metadata":{},"sourceType":"module"}