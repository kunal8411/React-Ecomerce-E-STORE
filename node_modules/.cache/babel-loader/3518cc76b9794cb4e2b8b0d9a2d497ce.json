{"ast":null,"code":"var _jsxFileName = \"/home/kunal/Kunal/THEMES/theme/src/components/forms/form-control/form-validation.js\";\nimport React, { Fragment } from 'react';\nimport Breadcrumb from '../../common/breadcrumb';\nimport { useForm } from 'react-hook-form';\nimport TooltipForm from './tooltipForm';\nimport { CustomStyles, FirstName, LastName, BrowserDefaults, Tooltips, Username, State, City, Zip, SupportedElements, SubmitForm } from '../../../constant';\n\nconst FormValidation = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialise the hook\n\n  const onSubmit = data => {\n    if (data !== '') {\n      alert('You submitted the form and stuff!');\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    title: \"Validation\",\n    parent: \"Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, CustomStyles)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"needs-validation\",\n    noValidate: \"\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationCustom01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, FirstName), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"firstName\",\n    type: \"text\",\n    placeholder: \"First name\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, errors.firstName && 'First name is required'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationCustom02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, LastName), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"lastName\",\n    type: \"text\",\n    placeholder: \"Last name\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, errors.lastName && 'Last name is required'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationCustomUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, Username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"inputGroupPrepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 62\n    }\n  }, \"@\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"userName\",\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, errors.lastName && 'User name is required'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Please choose a username.\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationCustom03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }\n  }, City), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"city\",\n    type: \"text\",\n    placeholder: \"City\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }\n  }, errors.city && 'Please provide a valid city'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }\n  }, \"Please provide a valid city.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationCustom04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }, State), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationCustom04\",\n    name: \"state\",\n    type: \"text\",\n    placeholder: \"State\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }\n  }, errors.state && 'Please provide a valid state.'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }, \"Please provide a valid state.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationCustom05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }, Zip), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationCustom05\",\n    name: \"zip\",\n    type: \"text\",\n    placeholder: \"Zip\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }, errors.zip && 'Please provide a valid zip.'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, \"Please provide a valid zip.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    id: \"invalidCheck\",\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"invalidCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Agree to terms and conditions\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }, \"You must agree before submitting.\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, SubmitForm)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, BrowserDefaults), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 43\n    }\n  }, \"Not interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, you’ll see a slightly different style of feedback.</span><span>While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationDefault01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }, FirstName), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationDefault01\",\n    type: \"text\",\n    placeholder: \"First name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationDefault02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, LastName), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationDefault02\",\n    type: \"text\",\n    placeholder: \"Last name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationDefaultUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  }, Username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"inputGroupPrepend2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 62\n    }\n  }, \"@\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationDefaultUsername\",\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend2\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationDefault03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }\n  }, City), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationDefault03\",\n    type: \"text\",\n    placeholder: \"City\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationDefault04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }\n  }, State), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationDefault04\",\n    type: \"text\",\n    placeholder: \"State\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationDefault05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }\n  }, Zip), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationDefault05\",\n    type: \"text\",\n    placeholder: \"Zip\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    id: \"invalidCheck2\",\n    type: \"checkbox\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"invalidCheck2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"Agree to terms and conditions\")))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, SubmitForm)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, SupportedElements), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 45\n    }\n  }, \"Not interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, you’ll see a slightly different style of feedback.</span><span>While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"was-validated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"custom-control-input\",\n    id: \"customControlValidation1\",\n    type: \"checkbox\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"customControlValidation1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Check this custom checkbox\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Example invalid feedback text\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"custom-control-input\",\n    id: \"customControlValidation2\",\n    type: \"radio\",\n    name: \"radio-stacked\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"customControlValidation2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"Toggle this custom radio\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-radio mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"custom-control-input\",\n    id: \"customControlValidation3\",\n    type: \"radio\",\n    name: \"radio-stacked\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"customControlValidation3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"Or toggle this other custom radio\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"More example invalid feedback text\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"custom-select\",\n    required: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }\n  }, \"Open this select menu\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, \"One\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 23\n    }\n  }, \"Two\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }\n  }, \"Three\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"Example invalid custom select feedback\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"custom-file-input\",\n    id: \"validatedCustomFile\",\n    type: \"file\",\n    required: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"validatedCustomFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, \"Choose file...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \"Example invalid custom file feedback\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, Tooltips), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 36\n    }\n  }, \"If your form layout allows it, you can swap the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 94\n    }\n  }, \".feedback\"), \" \", \"classes for\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 161\n    }\n  }, \".tooltip\"), \" \", \"classes to display validation feedback in a styled tooltip. Be sure to have a parent with\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 305\n    }\n  }, \"position: relative\"), \" \", \"on it for tooltip positioning. In the example below, our column classes have this already, but your project may require an alternative setup.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TooltipForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default FormValidation;","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/components/forms/form-control/form-validation.js"],"names":["React","Fragment","Breadcrumb","useForm","TooltipForm","CustomStyles","FirstName","LastName","BrowserDefaults","Tooltips","Username","State","City","Zip","SupportedElements","SubmitForm","FormValidation","register","handleSubmit","errors","onSubmit","data","alert","showMessages","required","firstName","lastName","city","state","zip"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport Breadcrumb from '../../common/breadcrumb';\nimport {useForm} from 'react-hook-form'\nimport TooltipForm from './tooltipForm';\nimport {CustomStyles,FirstName,LastName,BrowserDefaults,Tooltips,Username,State,City,Zip,SupportedElements,SubmitForm} from '../../../constant'\n\nconst FormValidation = () => {\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\n\n  const onSubmit = data => {\n    if (data !== '') {\n      alert('You submitted the form and stuff!');\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  return (\n    <Fragment>\n      <Breadcrumb title=\"Validation\" parent=\"Form\" />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h5>{CustomStyles}</h5>\n              </div>\n              <div className=\"card-body\">\n                <form className=\"needs-validation\" noValidate=\"\" onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"form-row\">\n                    <div className=\"col-md-4 mb-3\">\n                      <label htmlFor=\"validationCustom01\">{FirstName}</label>\n                      <input className=\"form-control\" name=\"firstName\" type=\"text\" placeholder=\"First name\" ref={register({ required: true })} />\n                      <span>{errors.firstName && 'First name is required'}</span>\n                      <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                    </div>\n                    <div className=\"col-md-4 mb-3\">\n                      <label htmlFor=\"validationCustom02\">{LastName}</label>\n                      <input className=\"form-control\" name=\"lastName\" type=\"text\" placeholder=\"Last name\" ref={register({ required: true })} />\n                      <span>{errors.lastName && 'Last name is required'}</span>\n                      <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                    </div>\n                    <div className=\"col-md-4 mb-3\">\n                      <label htmlFor=\"validationCustomUsername\">{Username}</label>\n                      <div className=\"input-group\">\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\" id=\"inputGroupPrepend\">{\"@\"}</span></div>\n                        <input className=\"form-control\" name=\"userName\" type=\"text\" placeholder=\"Username\" aria-describedby=\"inputGroupPrepend\" ref={register({ required: true })} />\n                        <span>{errors.lastName && 'User name is required'}</span>\n                        <div className=\"invalid-feedback\">{\"Please choose a username.\"}</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"col-md-6 mb-3\">\n                      <label htmlFor=\"validationCustom03\">{City}</label>\n                      <input className=\"form-control\" name=\"city\" type=\"text\" placeholder=\"City\" ref={register({ required: true })} />\n                      <span>{errors.city && 'Please provide a valid city'}</span>\n                      <div className=\"invalid-feedback\">{\"Please provide a valid city.\"}</div>\n                    </div>\n                    <div className=\"col-md-3 mb-3\">\n                      <label htmlFor=\"validationCustom04\">{State}</label>\n                      <input className=\"form-control\" id=\"validationCustom04\" name=\"state\" type=\"text\" placeholder=\"State\" ref={register({ required: true })} />\n                      <span>{errors.state && 'Please provide a valid state.'}</span>\n                      <div className=\"invalid-feedback\">{\"Please provide a valid state.\"}</div>\n                    </div>\n                    <div className=\"col-md-3 mb-3\">\n                      <label htmlFor=\"validationCustom05\">{Zip}</label>\n                      <input className=\"form-control\" id=\"validationCustom05\" name=\"zip\" type=\"text\" placeholder=\"Zip\" ref={register({ required: true })} />\n                      <span>{errors.zip && 'Please provide a valid zip.'}</span>\n                      <div className=\"invalid-feedback\">{\"Please provide a valid zip.\"}</div>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <div className=\"form-check\">\n                      <div className=\"checkbox p-0\">\n                        <input className=\"form-check-input\" id=\"invalidCheck\" type=\"checkbox\" />\n                        <label className=\"form-check-label\" htmlFor=\"invalidCheck\">{\"Agree to terms and conditions\"}</label>\n                      </div>\n                      <div className=\"invalid-feedback\">{\"You must agree before submitting.\"}</div>\n                    </div>\n                  </div>\n                  <button className=\"btn btn-primary\" type=\"submit\">{SubmitForm}</button>\n                </form>\n              </div>\n            </div>\n\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h5>{BrowserDefaults}</h5><span>{\"Not interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, you’ll see a slightly different style of feedback.</span><span>While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.\"}</span>\n              </div>\n              <div className=\"card-body\">\n                <form>\n                  <div className=\"form-row\">\n                    <div className=\"col-md-4 mb-3\">\n                      <label htmlFor=\"validationDefault01\">{FirstName}</label>\n                      <input className=\"form-control\" id=\"validationDefault01\" type=\"text\" placeholder=\"First name\" required />\n                    </div>\n                    <div className=\"col-md-4 mb-3\">\n                      <label htmlFor=\"validationDefault02\">{LastName}</label>\n                      <input className=\"form-control\" id=\"validationDefault02\" type=\"text\" placeholder=\"Last name\" required />\n                    </div>\n                    <div className=\"col-md-4 mb-3\">\n                      <label htmlFor=\"validationDefaultUsername\">{Username}</label>\n                      <div className=\"input-group\">\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\" id=\"inputGroupPrepend2\">{\"@\"}</span></div>\n                        <input className=\"form-control\" id=\"validationDefaultUsername\" type=\"text\" placeholder=\"Username\" aria-describedby=\"inputGroupPrepend2\" required />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"col-md-6 mb-3\">\n                      <label htmlFor=\"validationDefault03\">{City}</label>\n                      <input className=\"form-control\" id=\"validationDefault03\" type=\"text\" placeholder=\"City\" required />\n                    </div>\n                    <div className=\"col-md-3 mb-3\">\n                      <label htmlFor=\"validationDefault04\">{State}</label>\n                      <input className=\"form-control\" id=\"validationDefault04\" type=\"text\" placeholder=\"State\" required />\n                    </div>\n                    <div className=\"col-md-3 mb-3\">\n                      <label htmlFor=\"validationDefault05\">{Zip}</label>\n                      <input className=\"form-control\" id=\"validationDefault05\" type=\"text\" placeholder=\"Zip\" required />\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <div className=\"form-check\">\n                      <div className=\"checkbox p-0\">\n                        <input className=\"form-check-input\" id=\"invalidCheck2\" type=\"checkbox\" required />\n                        <label className=\"form-check-label\" htmlFor=\"invalidCheck2\">{\"Agree to terms and conditions\"}</label>\n                      </div>\n                    </div>\n                  </div>\n                  <button className=\"btn btn-primary\" type=\"submit\">{SubmitForm}</button>\n                </form>\n              </div>\n            </div>\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h5>{SupportedElements}</h5><span>{\"Not interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, you’ll see a slightly different style of feedback.</span><span>While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.\"}</span>\n              </div>\n              <div className=\"card-body\">\n                <form className=\"was-validated\">\n                  <div className=\"custom-control custom-checkbox mb-3\">\n                    <input className=\"custom-control-input\" id=\"customControlValidation1\" type=\"checkbox\" required />\n                    <label className=\"custom-control-label\" htmlFor=\"customControlValidation1\">{\"Check this custom checkbox\"}</label>\n                    <div className=\"invalid-feedback\">{\"Example invalid feedback text\"}</div>\n                  </div>\n                  <div className=\"custom-control custom-radio\">\n                    <input className=\"custom-control-input\" id=\"customControlValidation2\" type=\"radio\" name=\"radio-stacked\" required />\n                    <label className=\"custom-control-label\" htmlFor=\"customControlValidation2\">{\"Toggle this custom radio\"}</label>\n                  </div>\n                  <div className=\"custom-control custom-radio mb-3\">\n                    <input className=\"custom-control-input\" id=\"customControlValidation3\" type=\"radio\" name=\"radio-stacked\" required />\n                    <label className=\"custom-control-label\" htmlFor=\"customControlValidation3\">{\"Or toggle this other custom radio\"}</label>\n                    <div className=\"invalid-feedback\">{\"More example invalid feedback text\"}</div>\n                  </div>\n                  <div className=\"form-group\">\n                    <select className=\"custom-select\" required=\"\">\n                      <option value=\"\">{\"Open this select menu\"}</option>\n                      <option value=\"1\">{\"One\"}</option>\n                      <option value=\"2\">{\"Two\"}</option>\n                      <option value=\"3\">{\"Three\"}</option>\n                    </select>\n                    <div className=\"invalid-feedback\">{\"Example invalid custom select feedback\"}</div>\n                  </div>\n                  <div className=\"custom-file\">\n                    <input className=\"custom-file-input\" id=\"validatedCustomFile\" type=\"file\" required=\"\" />\n                    <label className=\"custom-file-label\" htmlFor=\"validatedCustomFile\">{\"Choose file...\"}</label>\n                    <div className=\"invalid-feedback\">{\"Example invalid custom file feedback\"}</div>\n                  </div>\n                </form>\n              </div>\n            </div>\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h5>{Tooltips}</h5><span>{\"If your form layout allows it, you can swap the\"} <code className=\"text-danger\">{\".feedback\"}</code> {\"classes for\"} <code className=\"text-danger\">{\".tooltip\"}</code> {\"classes to display validation feedback in a styled tooltip. Be sure to have a parent with\"} <code className=\"text-danger\">{\"position: relative\"}</code> {\"on it for tooltip positioning. In the example below, our column classes have this already, but your project may require an alternative setup.\"}</span>\n              </div>\n              <div className=\"card-body\">\n                <TooltipForm />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default FormValidation;"]},"metadata":{},"sourceType":"module"}