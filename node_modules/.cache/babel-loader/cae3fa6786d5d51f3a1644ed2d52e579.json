{"ast":null,"code":"var _jsxFileName = \"/home/kunal/Kunal/THEMES/theme/src/components/dashboard/server/liveChart.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\nconst primary = localStorage.getItem('primary_color') || \"#4466f2\";\n\nconst boxMullerRandom = () => {\n  let phase = false,\n      x1,\n      x2,\n      w;\n  return function () {\n    // eslint-disable-next-line\n    if (phase = !phase) {\n      do {\n        x1 = 2.0 * Math.random() - 1.0;\n        x2 = 2.0 * Math.random() - 1.0;\n        w = x1 * x1 + x2 * x2;\n      } while (w >= 1.0);\n\n      w = Math.sqrt(-2.0 * Math.log(w) / w);\n      return x1 * w;\n    } else {\n      return x2 * w;\n    }\n  }();\n};\n\nconst LiveChart = () => {\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      setChartData(chartData.concat([boxMullerRandom()]));\n    }, 500);\n    return () => clearInterval(interval);\n  }, [chartData]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flot-chart-placeholder\",\n    id: \"cpu-updating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sparklines, {\n    data: chartData,\n    limit: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SparklinesLine, {\n    color: primary,\n    style: {\n      strokeWidth: 0.4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default LiveChart;","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/components/dashboard/server/liveChart.js"],"names":["React","Fragment","useState","useEffect","Sparklines","SparklinesLine","primary","localStorage","getItem","boxMullerRandom","phase","x1","x2","w","Math","random","sqrt","log","LiveChart","chartData","setChartData","interval","setInterval","concat","clearInterval","strokeWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,kBAA3C;AAEA,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,KAAyC,SAAzD;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC1B,MAAIC,KAAK,GAAG,KAAZ;AAAA,MACIC,EADJ;AAAA,MACQC,EADR;AAAA,MACYC,CADZ;AAGA,SAAQ,YAAY;AACpB;AACI,QAAIH,KAAK,GAAG,CAACA,KAAb,EAAoB;AAChB,SAAG;AACCC,QAAAA,EAAE,GAAG,MAAMG,IAAI,CAACC,MAAL,EAAN,GAAsB,GAA3B;AACAH,QAAAA,EAAE,GAAG,MAAME,IAAI,CAACC,MAAL,EAAN,GAAsB,GAA3B;AACAF,QAAAA,CAAC,GAAGF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAnB;AACH,OAJD,QAISC,CAAC,IAAI,GAJd;;AAMAA,MAAAA,CAAC,GAAGC,IAAI,CAACE,IAAL,CAAW,CAAC,GAAD,GAAOF,IAAI,CAACG,GAAL,CAASJ,CAAT,CAAR,GAAuBA,CAAjC,CAAJ;AACA,aAAOF,EAAE,GAAGE,CAAZ;AACH,KATD,MASO;AACH,aAAOD,EAAE,GAAGC,CAAZ;AACH;AACJ,GAdM,EAAP;AAeH,CAnBD;;AAqBA,MAAMK,SAAS,GAAG,MAAM;AAEpB,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BlB,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,QAAQ,GAAG,IAAf;AACAA,IAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACzBF,MAAAA,YAAY,CAACD,SAAS,CAACI,MAAV,CAAiB,CAACd,eAAe,EAAhB,CAAjB,CAAD,CAAZ;AACH,KAFqB,EAEnB,GAFmB,CAAtB;AAGA,WAAO,MAAMe,aAAa,CAACH,QAAD,CAA1B;AACH,GANQ,EAMP,CAACF,SAAD,CANO,CAAT;AAQA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,EAAE,EAAC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,SAAlB;AAA6B,IAAA,KAAK,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEb,OAAvB;AAAgC,IAAA,KAAK,EAAE;AAAEmB,MAAAA,WAAW,EAAE;AAAf,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ;AAUC,CAtBL;;AAwBA,eAAeP,SAAf","sourcesContent":["import React, { Fragment, useState,useEffect } from 'react';\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\n\nconst primary = localStorage.getItem('primary_color') || \"#4466f2\";\n\nconst boxMullerRandom = () => {\n    let phase = false,\n        x1, x2, w;\n\n    return (function () {\n    // eslint-disable-next-line\n        if (phase = !phase) {\n            do {\n                x1 = 2.0 * Math.random() - 1.0;\n                x2 = 2.0 * Math.random() - 1.0;\n                w = x1 * x1 + x2 * x2;\n            } while (w >= 1.0);\n\n            w = Math.sqrt((-2.0 * Math.log(w)) / w);\n            return x1 * w;\n        } else {\n            return x2 * w;\n        }\n    })();\n}\n\nconst LiveChart = () => {\n\n    const [chartData,setChartData] = useState([]);\n\n    useEffect(() => {\n        let interval = null;\n        interval = setInterval(() => {\n            setChartData(chartData.concat([boxMullerRandom()]))\n        }, 500);\n        return () => clearInterval(interval);\n    },[chartData])\n   \n    return (\n        <Fragment>\n            <div className=\"flot-chart-placeholder\" id=\"cpu-updating\">\n                <Sparklines data={chartData} limit={20}>\n                    <SparklinesLine color={primary} style={{ strokeWidth: 0.4 }} />\n                </Sparklines>\n            </div>\n\n        </Fragment>\n    );\n    }\n\nexport default LiveChart;"]},"metadata":{},"sourceType":"module"}