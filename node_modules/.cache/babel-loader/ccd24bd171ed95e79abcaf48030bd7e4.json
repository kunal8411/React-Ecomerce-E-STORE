{"ast":null,"code":"var _jsxFileName = \"/home/kunal/Kunal/THEMES/theme/src/components/forms/form-control/tooltipForm.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FirstName, LastName, Username, State, City, Zip, SubmitForm } from '../../../constant';\n\nconst TooltipForm = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialise the hook\n\n  const [validateClass, setValidateClass] = useState(false);\n\n  const onSubmit = data => {\n    if (data !== '') {\n      alert('You submitted the form and stuff!');\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: `needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`,\n    noValidate: \"\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationTooltip01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, FirstName), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip01\",\n    name: \"firstName\",\n    type: \"text\",\n    placeholder: \"First name\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, errors.firstName && 'First name is required'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationTooltip02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, LastName), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip02\",\n    name: \"lastName\",\n    type: \"text\",\n    placeholder: \"Last name\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, errors.lastName && 'Last name is required'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationCustomUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, Username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"validationTooltip03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 52\n    }\n  }, \"@\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip03\",\n    name: \"userName\",\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, errors.lastName && 'User name is required'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"Please choose a username.\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationTooltip04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, City), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip04\",\n    name: \"city\",\n    type: \"text\",\n    placeholder: \"City\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, errors.city && 'Please provide a valid city'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Please provide a valid city.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationTooltip05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, State), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip05\",\n    name: \"state\",\n    type: \"text\",\n    placeholder: \"State\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, errors.state && 'Please provide a valid state.'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Please provide a valid state.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"validationTooltip06\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, Zip), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip06\",\n    name: \"zip\",\n    type: \"text\",\n    placeholder: \"Zip\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, errors.zip && 'Please provide a valid zip.'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Please provide a valid zip.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    id: \"invalidCheck\",\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"invalidCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Agree to terms and conditions\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"You must agree before submitting.\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    onClick: () => setValidateClass(!validateClass),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, SubmitForm)));\n};\n\nexport default TooltipForm;","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/components/forms/form-control/tooltipForm.js"],"names":["React","useState","useForm","FirstName","LastName","Username","State","City","Zip","SubmitForm","TooltipForm","register","handleSubmit","errors","validateClass","setValidateClass","onSubmit","data","alert","showMessages","required","firstName","lastName","city","state","zip"],"mappings":"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","sourcesContent":["import React ,{useState} from 'react';\nimport {useForm} from 'react-hook-form'\nimport {FirstName,LastName,Username,State,City,Zip,SubmitForm} from '../../../constant'\nconst TooltipForm = () => {\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\n  const [validateClass , setValidateClass] = useState(false);\n  const onSubmit = data => {\n    if (data !== '') {\n      alert('You submitted the form and stuff!');\n    } else {\n      errors.showMessages();\n    }\n  };\n  return (\n    <div>\n      <form className={`needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`} noValidate=\"\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-row\">\n          <div className=\"col-md-4 mb-3\">\n            <label htmlFor=\"validationTooltip01\">{FirstName}</label>\n            <input className=\"form-control\" id=\"validationTooltip01\" name=\"firstName\" type=\"text\" placeholder=\"First name\" ref={register({ required: true })} />\n            <span>{errors.firstName && 'First name is required'}</span>\n            <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n          </div>\n          <div className=\"col-md-4 mb-3\">\n            <label htmlFor=\"validationTooltip02\">{LastName}</label>\n            <input className=\"form-control\" id=\"validationTooltip02\" name=\"lastName\" type=\"text\" placeholder=\"Last name\" ref={register({ required: true })} />\n            <span>{errors.lastName && 'Last name is required'}</span>\n            <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n          </div>\n          <div className=\"col-md-4 mb-3\">\n            <label htmlFor=\"validationCustomUsername\">{Username}</label>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\"><span className=\"input-group-text\" id=\"validationTooltip03\">@</span></div>\n              <input className=\"form-control\" id=\"validationTooltip03\" name=\"userName\" type=\"text\" placeholder=\"Username\" aria-describedby=\"inputGroupPrepend\" ref={register({ required: true })} />\n              <span>{errors.lastName && 'User name is required'}</span>\n              <div className=\"invalid-feedback\">{\"Please choose a username.\"}</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"form-row\">\n          <div className=\"col-md-6 mb-3\">\n            <label htmlFor=\"validationTooltip04\">{City}</label>\n            <input className=\"form-control\" id=\"validationTooltip04\" name=\"city\" type=\"text\" placeholder=\"City\" ref={register({ required: true })} />\n            <span>{errors.city && 'Please provide a valid city'}</span>\n            <div className=\"invalid-feedback\">{\"Please provide a valid city.\"}</div>\n          </div>\n          <div className=\"col-md-3 mb-3\">\n            <label htmlFor=\"validationTooltip05\">{State}</label>\n            <input className=\"form-control\" id=\"validationTooltip05\" name=\"state\" type=\"text\" placeholder=\"State\" ref={register({ required: true })} />\n            <span>{errors.state && 'Please provide a valid state.'}</span>\n            <div className=\"invalid-feedback\">{\"Please provide a valid state.\"}</div>\n          </div>\n          <div className=\"col-md-3 mb-3\">\n            <label htmlFor=\"validationTooltip06\">{Zip}</label>\n            <input className=\"form-control\" id=\"validationTooltip06\" name=\"zip\" type=\"text\" placeholder=\"Zip\" ref={register({ required: true })} />\n            <span>{errors.zip && 'Please provide a valid zip.'}</span>\n            <div className=\"invalid-feedback\">{\"Please provide a valid zip.\"}</div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check\">\n            <div className=\"checkbox p-0\">\n              <input className=\"form-check-input\" id=\"invalidCheck\" type=\"checkbox\" />\n              <label className=\"form-check-label\" htmlFor=\"invalidCheck\">{\"Agree to terms and conditions\"}</label>\n            </div>\n            <div className=\"invalid-feedback\">{\"You must agree before submitting.\"}</div>\n          </div>\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={() => setValidateClass(!validateClass)}>{SubmitForm}</button>\n      </form>\n    </div>\n  );\n};\n\nexport default TooltipForm;"]},"metadata":{},"sourceType":"module"}