{"ast":null,"code":"var _jsxFileName = \"/home/kunal/Kunal/THEMES/theme/src/components/charts/googleChart.js\";\nimport React, { Fragment } from 'react';\nimport Breadcrumb from '../common/breadcrumb';\nimport { Chart } from \"react-google-charts\";\nimport { PieChart, DonutChart, RotatingPieChart, SliceVisibilityThreshold, AreaChart, LineChart, ComboChart, StackingAreaChart, MaterialDesign, BasicBarChart } from \"../../constant\";\n\nconst GoogleChart = () => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    title: \"Google Chart\",\n    parent: \"Chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 33\n    }\n  }, PieChart, \" \", \"1\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '400px',\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['Task', 'Hours per Day'], ['Work', 6.7], ['Eat', 13.3], ['Commute', 20], ['Watch TV', 26.7], ['Sleep', 33.3]],\n    options: {\n      title: 'My Daily Activities',\n      colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"]\n    },\n    rootProps: {\n      'data-testid': '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, PieChart, \" \", \"2\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '400px',\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['Task', 'Hours per Day'], ['Work', 6.7], ['Eat', 13.3], ['Commute', 20], ['Watch TV', 26.7], ['Sleep', 33.3]],\n    options: {\n      title: 'My Daily Activities',\n      colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"],\n      // Just add this option\n      is3D: true\n    },\n    rootProps: {\n      'data-testid': '2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, DonutChart)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '400px',\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['Task', 'Hours per Day'], ['Work', 11], ['Eat', 2], ['Commute', 2], ['Watch TV', 2], ['Sleep', 7]],\n    options: {\n      title: 'My Daily Activities',\n      colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"],\n      // Just add this option\n      pieHole: 0.4\n    },\n    rootProps: {\n      'data-testid': '3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, RotatingPieChart)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '400px',\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['Language', 'Speakers (in millions)'], ['German', 2.85], ['French', 1.66], ['Italian', 0.316], ['Romansh', 0.0791]],\n    options: {\n      legend: 'none',\n      pieSliceText: 'label',\n      title: 'Swiss Language Use (100 degree rotation)',\n      colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"],\n      pieStartAngle: 100\n    },\n    rootProps: {\n      'data-testid': '4'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, RotatingPieChart)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '400px',\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['Language', 'Speakers (in millions)'], ['Assamese', 13], ['Bengali', 83], ['Bodo', 1.4], ['Dogri', 2.3], ['Gujarati', 46], ['Hindi', 300], ['Kannada', 38], ['Kashmiri', 5.5], ['Konkani', 5], ['Maithili', 20], ['Malayalam', 33], ['Manipuri', 1.5], ['Marathi', 72], ['Nepali', 2.9], ['Oriya', 33], ['Punjabi', 29], ['Sanskrit', 0.01], ['Santhali', 6.5], ['Sindhi', 2.5], ['Tamil', 61], ['Telugu', 74], ['Urdu', 52]],\n    options: {\n      title: 'Indian Language Use',\n      legend: 'none',\n      pieSliceText: 'label',\n      colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#007bff\", \"#ff9f40\", \"#FF5370\", \"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#007bff\", \"#ff9f40\", \"#FF5370\", \"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#007bff\", \"#ff9f40\", \"#FF5370\", \"#fd7b6c\", \"#22af47\", \"#007bff\", \"#ff9f40\"],\n      slices: {\n        4: {\n          offset: 0.2\n        },\n        12: {\n          offset: 0.3\n        },\n        14: {\n          offset: 0.4\n        },\n        15: {\n          offset: 0.5\n        }\n      }\n    },\n    rootProps: {\n      'data-testid': '5'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, SliceVisibilityThreshold)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '400px',\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['Pizza', 'Popularity'], ['Pepperoni', 33], ['Hawaiian', 26], ['Mushroom', 22], ['Sausage', 10], // Below limit.\n    ['Anchovies', 9] // Below limit.\n    ],\n    options: {\n      title: 'Popularity of Types of Pizza',\n      colors: [\"#4466f2\", \"#1ea6ec\", \"#fa9f40\", \"#31af47\", \"#4466f2\"],\n      sliceVisibilityThreshold: 0.2 // 20%\n\n    },\n    rootProps: {\n      'data-testid': '7'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, AreaChart)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '300px',\n    chartType: \"AreaChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['Year', 'Sales', 'Expenses'], ['2013', 1000, 400], ['2014', 1170, 460], ['2015', 660, 1120], ['2016', 1030, 540]],\n    options: {\n      title: 'Company Performance',\n      hAxis: {\n        title: 'Year',\n        titleTextStyle: {\n          color: '#333'\n        }\n      },\n      vAxis: {\n        minValue: 0\n      },\n      colors: [\"#4466f2\", \"#1ea6ec\"],\n      // For the legend to fit, we make the chart area smaller\n      chartArea: {\n        width: '50%',\n        height: '70%'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 33\n    }\n  }, StackingAreaChart)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '300px',\n    chartType: \"AreaChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['Year', 'Sales', 'Expenses'], ['2013', 1000, 400], ['2014', 1170, 460], ['2015', 660, 1120], ['2016', 1030, 540]],\n    options: {\n      isStacked: true,\n      height: 300,\n      legend: {\n        position: 'top',\n        maxLines: 3\n      },\n      vAxis: {\n        minValue: 0\n      },\n      colors: [\"#4466f2\", \"#1ea6ec\"]\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 33\n    }\n  }, BasicBarChart)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '400px',\n    chartType: \"BarChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['City', '2010 Population', '2000 Population'], ['New York City, NY', 8175000, 8008000], ['Los Angeles, CA', 3792000, 3694000], ['Chicago, IL', 2695000, 2896000], ['Houston, TX', 2099000, 1953000], ['Philadelphia, PA', 1526000, 1517000]],\n    options: {\n      title: 'Population of Largest U.S. Cities',\n      chartArea: {\n        width: '50%'\n      },\n      colors: [\"#4466f2\", \"#1ea6ec\"],\n      hAxis: {\n        title: 'Total Population',\n        minValue: 0\n      },\n      vAxis: {\n        title: 'City'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 33\n    }\n  }, MaterialDesign)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '400px',\n    chartType: \"Bar\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['Year', 'Sales', 'Expenses', 'Profit'], ['2014', 1000, 400, 200], ['2015', 1170, 460, 250], ['2016', 660, 1120, 300], ['2017', 1030, 540, 350]],\n    options: {\n      // Material design options\n      colors: [\"#4466f2\", \"#1ea6ec\", \"#31af47\"],\n      chart: {\n        title: 'Company Performance',\n        subtitle: 'Sales, Expenses, and Profit: 2014-2017'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 33\n    }\n  }, LineChart)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '400px',\n    chartType: \"LineChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['x', 'dogs', 'cats'], [0, 0, 0], [1, 10, 5], [2, 23, 15], [3, 17, 9], [4, 18, 10], [5, 9, 5], [6, 11, 3], [7, 27, 19]],\n    options: {\n      hAxis: {\n        title: 'Time'\n      },\n      vAxis: {\n        title: 'Popularity'\n      },\n      colors: [\"#4466f2\", \"#1ea6ec\"],\n      series: {\n        1: {\n          curveType: 'function'\n        }\n      }\n    },\n    rootProps: {\n      'data-testid': '2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 33\n    }\n  }, ComboChart)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '300px',\n    chartType: \"ComboChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 45\n      }\n    }, \"Loading Chart\"),\n    data: [['Month', 'Bolivia', 'Ecuador', 'Madagascar', 'Papua New Guinea', 'Rwanda', 'Average'], ['2004/05', 165, 938, 522, 998, 450, 614.6], ['2005/06', 135, 1120, 599, 1268, 288, 682], ['2006/07', 157, 1167, 587, 807, 397, 623], ['2007/08', 139, 1110, 615, 968, 215, 609.4], ['2008/09', 136, 691, 629, 1026, 366, 569.6]],\n    options: {\n      title: 'Monthly Coffee Production by Country',\n      vAxis: {\n        title: 'Cups'\n      },\n      hAxis: {\n        title: 'Month'\n      },\n      seriesType: 'bars',\n      colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#FF5370\", \"#007bff\"],\n      series: {\n        5: {\n          type: 'line'\n        }\n      }\n    },\n    rootProps: {\n      'data-testid': '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nexport default GoogleChart;","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/components/charts/googleChart.js"],"names":["React","Fragment","Breadcrumb","Chart","PieChart","DonutChart","RotatingPieChart","SliceVisibilityThreshold","AreaChart","LineChart","ComboChart","StackingAreaChart","MaterialDesign","BasicBarChart","GoogleChart","title","colors","is3D","pieHole","legend","pieSliceText","pieStartAngle","slices","offset","sliceVisibilityThreshold","hAxis","titleTextStyle","color","vAxis","minValue","chartArea","width","height","isStacked","position","maxLines","chart","subtitle","series","curveType","seriesType","type"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport Breadcrumb from '../common/breadcrumb';\nimport { Chart } from \"react-google-charts\";\nimport { PieChart,DonutChart,RotatingPieChart,SliceVisibilityThreshold,AreaChart,LineChart,ComboChart,StackingAreaChart,MaterialDesign,BasicBarChart } from \"../../constant\";\n\nconst GoogleChart = () => {\n    return (\n        <Fragment>\n            <Breadcrumb title=\"Google Chart\" parent=\"Chart\" />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{PieChart} {\"1\"}</h5>\n                            </div>\n                            <div className=\"card-body\"> \n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['Task', 'Hours per Day'],\n                                        ['Work', 6.7],\n                                        ['Eat', 13.3],\n                                        ['Commute', 20],\n                                        ['Watch TV', 26.7],\n                                        ['Sleep', 33.3],\n                                    ]}\n                                    options={{\n                                        title: 'My Daily Activities',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"]\n                                    }}\n                                    rootProps={{ 'data-testid': '1' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{PieChart} {\"2\"}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['Task', 'Hours per Day'],\n                                        ['Work', 6.7],\n                                        ['Eat', 13.3],\n                                        ['Commute', 20],\n                                        ['Watch TV', 26.7],\n                                        ['Sleep', 33.3],\n                                    ]}\n                                    options={{\n                                        title: 'My Daily Activities',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"],\n                                        // Just add this option\n                                        is3D: true,\n                                    }}\n                                    rootProps={{ 'data-testid': '2' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{DonutChart}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['Task', 'Hours per Day'],\n                                        ['Work', 11],\n                                        ['Eat', 2],\n                                        ['Commute', 2],\n                                        ['Watch TV', 2],\n                                        ['Sleep', 7],\n                                    ]}\n                                    options={{\n                                        title: 'My Daily Activities',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"],\n                                        // Just add this option\n                                        pieHole: 0.4,\n                                    }}\n                                    rootProps={{ 'data-testid': '3' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{RotatingPieChart}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['Language', 'Speakers (in millions)'],\n                                        ['German', 2.85],\n                                        ['French', 1.66],\n                                        ['Italian', 0.316],\n                                        ['Romansh', 0.0791],\n                                    ]}\n                                    options={{\n                                        legend: 'none',\n                                        pieSliceText: 'label',\n                                        title: 'Swiss Language Use (100 degree rotation)',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#1b7aff\", \"#f85370\"],\n                                        pieStartAngle: 100,\n                                    }}\n                                    rootProps={{ 'data-testid': '4' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{RotatingPieChart}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['Language', 'Speakers (in millions)'],\n                                        ['Assamese', 13],\n                                        ['Bengali', 83],\n                                        ['Bodo', 1.4],\n                                        ['Dogri', 2.3],\n                                        ['Gujarati', 46],\n                                        ['Hindi', 300],\n                                        ['Kannada', 38],\n                                        ['Kashmiri', 5.5],\n                                        ['Konkani', 5],\n                                        ['Maithili', 20],\n                                        ['Malayalam', 33],\n                                        ['Manipuri', 1.5],\n                                        ['Marathi', 72],\n                                        ['Nepali', 2.9],\n                                        ['Oriya', 33],\n                                        ['Punjabi', 29],\n                                        ['Sanskrit', 0.01],\n                                        ['Santhali', 6.5],\n                                        ['Sindhi', 2.5],\n                                        ['Tamil', 61],\n                                        ['Telugu', 74],\n                                        ['Urdu', 52],\n                                    ]}\n                                    options={{\n                                        title: 'Indian Language Use',\n                                        legend: 'none',\n                                        pieSliceText: 'label',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#007bff\", \"#ff9f40\", \"#FF5370\",\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#007bff\", \"#ff9f40\", \"#FF5370\",\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#007bff\", \"#ff9f40\", \"#FF5370\", \"#fd7b6c\", \"#22af47\",\"#007bff\", \"#ff9f40\"],\n                                        slices: {\n                                            4: { offset: 0.2 },\n                                            12: { offset: 0.3 },\n                                            14: { offset: 0.4 },\n                                            15: { offset: 0.5 },\n                                        },\n                                    }}\n                                    rootProps={{ 'data-testid': '5' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{SliceVisibilityThreshold}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"PieChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['Pizza', 'Popularity'],\n                                        ['Pepperoni', 33],\n                                        ['Hawaiian', 26],\n                                        ['Mushroom', 22],\n                                        ['Sausage', 10], // Below limit.\n                                        ['Anchovies', 9], // Below limit.\n                                    ]}\n                                    options={{\n                                        title: 'Popularity of Types of Pizza',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#fa9f40\", \"#31af47\", \"#4466f2\"],\n                                        sliceVisibilityThreshold: 0.2, // 20%\n                                    }}\n                                    rootProps={{ 'data-testid': '7' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{AreaChart}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'300px'}\n                                    chartType=\"AreaChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['Year', 'Sales', 'Expenses'],\n                                        ['2013', 1000, 400],\n                                        ['2014', 1170, 460],\n                                        ['2015', 660, 1120],\n                                        ['2016', 1030, 540],\n                                    ]}\n                                    options={{\n                                        title: 'Company Performance',\n                                        hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },\n                                        vAxis: { minValue: 0 },\n                                        colors: [\"#4466f2\", \"#1ea6ec\"],\n                                        // For the legend to fit, we make the chart area smaller\n                                        chartArea: { width: '50%', height: '70%' },\n                                    }}\n                                    // For tests\n                                    rootProps={{ 'data-testid': '1' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{StackingAreaChart}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'300px'}\n                                    chartType=\"AreaChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['Year', 'Sales', 'Expenses'],\n                                        ['2013', 1000, 400],\n                                        ['2014', 1170, 460],\n                                        ['2015', 660, 1120],\n                                        ['2016', 1030, 540],\n                                    ]}\n                                    options={{\n                                        isStacked: true,\n                                        height: 300,\n                                        legend: { position: 'top', maxLines: 3 },\n                                        vAxis: { minValue: 0 },\n                                        colors: [\"#4466f2\", \"#1ea6ec\"],\n                                    }}\n                                    // For tests\n                                    rootProps={{ 'data-testid': '2' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{BasicBarChart}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"BarChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['City', '2010 Population', '2000 Population'],\n                                        ['New York City, NY', 8175000, 8008000],\n                                        ['Los Angeles, CA', 3792000, 3694000],\n                                        ['Chicago, IL', 2695000, 2896000],\n                                        ['Houston, TX', 2099000, 1953000],\n                                        ['Philadelphia, PA', 1526000, 1517000],\n                                    ]}\n                                    options={{\n                                        title: 'Population of Largest U.S. Cities',\n                                        chartArea: { width: '50%' },\n                                        colors: [\"#4466f2\", \"#1ea6ec\"],\n                                        hAxis: {\n                                            title: 'Total Population',\n                                            minValue: 0,\n                                        },\n                                        vAxis: {\n                                            title: 'City',\n                                        },\n                                    }}\n                                    // For tests\n                                    rootProps={{ 'data-testid': '1' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{MaterialDesign}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"Bar\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['Year', 'Sales', 'Expenses', 'Profit'],\n                                        ['2014', 1000, 400, 200],\n                                        ['2015', 1170, 460, 250],\n                                        ['2016', 660, 1120, 300],\n                                        ['2017', 1030, 540, 350],\n                                    ]}\n                                    options={{\n                                        // Material design options\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#31af47\"],\n                                        chart: {\n                                            title: 'Company Performance',\n                                            subtitle: 'Sales, Expenses, and Profit: 2014-2017',\n                                        },\n                                    }}\n                                    // For tests\n                                    rootProps={{ 'data-testid': '2' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{LineChart}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'400px'}\n                                    chartType=\"LineChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        ['x', 'dogs', 'cats'],\n                                        [0, 0, 0],\n                                        [1, 10, 5],\n                                        [2, 23, 15],\n                                        [3, 17, 9],\n                                        [4, 18, 10],\n                                        [5, 9, 5],\n                                        [6, 11, 3],\n                                        [7, 27, 19],\n                                    ]}\n                                    options={{\n                                        hAxis: {\n                                            title: 'Time',\n                                        },\n                                        vAxis: {\n                                            title: 'Popularity',\n                                        },\n                                        colors: [\"#4466f2\", \"#1ea6ec\"],\n                                        series: {\n                                            1: { curveType: 'function' },\n                                        },\n                                    }}\n                                    rootProps={{ 'data-testid': '2' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>{ComboChart}</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'300px'}\n                                    chartType=\"ComboChart\"\n                                    loader={<div>{\"Loading Chart\"}</div>}\n                                    data={[\n                                        [\n                                            'Month',\n                                            'Bolivia',\n                                            'Ecuador',\n                                            'Madagascar',\n                                            'Papua New Guinea',\n                                            'Rwanda',\n                                            'Average',\n                                        ],\n                                        ['2004/05', 165, 938, 522, 998, 450, 614.6],\n                                        ['2005/06', 135, 1120, 599, 1268, 288, 682],\n                                        ['2006/07', 157, 1167, 587, 807, 397, 623],\n                                        ['2007/08', 139, 1110, 615, 968, 215, 609.4],\n                                        ['2008/09', 136, 691, 629, 1026, 366, 569.6],\n                                    ]}\n                                    options={{\n                                        title: 'Monthly Coffee Production by Country',\n                                        vAxis: { title: 'Cups' },\n                                        hAxis: { title: 'Month' },\n                                        seriesType: 'bars',\n                                        colors: [\"#4466f2\", \"#1ea6ec\", \"#22af47\", \"#FF5370\", \"#007bff\"],\n                                        series: { 5: { type: 'line' } },\n                                    }}\n                                    rootProps={{ 'data-testid': '1' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    );\n};\n\nexport default GoogleChart;"]},"metadata":{},"sourceType":"module"}