{"ast":null,"code":"import { GET_MEMBERS, GET_MEMBERS_SUCCESS, GET_CHATS, GET_CHATS_SUCCESS, CREATE_CHAT, CHANGE_CHAT, UPDATE_SELECTED_USER, SEARCH_MEMBER, SEND_MESSAGE, REPLY_BY_SELECTED_USER, WATCH_CHAT_MEMBERS, WATCH_CHAT_SUCCESS, WATCH_ALL_CHAT_SUCCESS } from '../../redux/actionTypes';\nexport const watchfetchChatMember = () => ({\n  type: WATCH_CHAT_MEMBERS\n});\nexport const watchfetchChat = () => ({\n  type: WATCH_CHAT_SUCCESS\n});\nexport const watchfetchAllChat = () => ({\n  type: WATCH_ALL_CHAT_SUCCESS\n});\nexport const getChats = chats => ({\n  type: GET_CHATS,\n  payload: chats\n});\nexport const getMembers = () => ({\n  type: GET_MEMBERS\n});\nexport const searchMember = keyword => ({\n  type: SEARCH_MEMBER,\n  payload: keyword\n});\nexport const getMembersSuccess = chats => {\n  return {\n    type: GET_MEMBERS_SUCCESS,\n    payload: {\n      chats\n    }\n  };\n};\nexport const getChatsSuccess = (chats, selectedUser, online) => {\n  return {\n    type: GET_CHATS_SUCCESS,\n    payload: {\n      chats,\n      selectedUser,\n      online\n    }\n  };\n};\nexport const sendMessageToChat = (currentUserId, selectedUserId, message, allchats, online) => ({\n  type: SEND_MESSAGE,\n  payload: {\n    currentUserId,\n    selectedUserId,\n    message,\n    allchats,\n    online\n  }\n});\nexport const replyMessageToChat = (currentUserId, selectedUserId, message, allchats, online) => ({\n  type: REPLY_BY_SELECTED_USER,\n  payload: {\n    currentUserId,\n    selectedUserId,\n    message,\n    allchats,\n    online\n  }\n});\nexport const changeChat = userId => ({\n  type: CHANGE_CHAT,\n  payload: userId\n});\nexport const createChat = (currentUserId, selectedUserId, allChats) => ({\n  type: CREATE_CHAT,\n  payload: {\n    currentUserId,\n    selectedUserId,\n    allChats\n  }\n});\nexport const updateSelectedUser = (selectedUser, online) => ({\n  type: UPDATE_SELECTED_USER,\n  payload: {\n    selectedUser,\n    online\n  }\n});","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/redux/chat/action.js"],"names":["GET_MEMBERS","GET_MEMBERS_SUCCESS","GET_CHATS","GET_CHATS_SUCCESS","CREATE_CHAT","CHANGE_CHAT","UPDATE_SELECTED_USER","SEARCH_MEMBER","SEND_MESSAGE","REPLY_BY_SELECTED_USER","WATCH_CHAT_MEMBERS","WATCH_CHAT_SUCCESS","WATCH_ALL_CHAT_SUCCESS","watchfetchChatMember","type","watchfetchChat","watchfetchAllChat","getChats","chats","payload","getMembers","searchMember","keyword","getMembersSuccess","getChatsSuccess","selectedUser","online","sendMessageToChat","currentUserId","selectedUserId","message","allchats","replyMessageToChat","changeChat","userId","createChat","allChats","updateSelectedUser"],"mappings":"AAAA,SACIA,WADJ,EAEIC,mBAFJ,EAGIC,SAHJ,EAIIC,iBAJJ,EAKIC,WALJ,EAMIC,WANJ,EAOIC,oBAPJ,EAQIC,aARJ,EASIC,YATJ,EAUIC,sBAVJ,EAWIC,kBAXJ,EAYIC,kBAZJ,EAaIC,sBAbJ,QAeO,yBAfP;AAkBA,OAAO,MAAOC,oBAAoB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ;AADkC,CAAP,CAA9B;AAIP,OAAO,MAAOK,cAAc,GAAG,OAAO;AAClCD,EAAAA,IAAI,EAAEH;AAD4B,CAAP,CAAxB;AAIP,OAAO,MAAOK,iBAAiB,GAAG,OAAO;AACrCF,EAAAA,IAAI,EAAEF;AAD+B,CAAP,CAA3B;AAIP,OAAO,MAAMK,QAAQ,GAAIC,KAAD,KAAY;AAChCJ,EAAAA,IAAI,EAAEZ,SAD0B;AAEhCiB,EAAAA,OAAO,EAACD;AAFwB,CAAZ,CAAjB;AAKP,OAAO,MAAME,UAAU,GAAG,OAAO;AAC7BN,EAAAA,IAAI,EAAEd;AADuB,CAAP,CAAnB;AAIP,OAAO,MAAMqB,YAAY,GAAIC,OAAD,KAAc;AACtCR,EAAAA,IAAI,EAAEP,aADgC;AAEtCY,EAAAA,OAAO,EAAEG;AAF6B,CAAd,CAArB;AAKP,OAAO,MAAMC,iBAAiB,GAAIL,KAAD,IAAW;AACxC,SAAQ;AACJJ,IAAAA,IAAI,EAAEb,mBADF;AAEJkB,IAAAA,OAAO,EAAE;AAACD,MAAAA;AAAD;AAFL,GAAR;AAIH,CALM;AAQP,OAAO,MAAMM,eAAe,GAAG,CAACN,KAAD,EAAQO,YAAR,EAAqBC,MAArB,KAAgC;AAC3D,SAAM;AACFZ,IAAAA,IAAI,EAAEX,iBADJ;AAEFgB,IAAAA,OAAO,EAAE;AAAED,MAAAA,KAAF;AAASO,MAAAA,YAAT;AAAsBC,MAAAA;AAAtB;AAFP,GAAN;AAIH,CALM;AAOP,OAAO,MAAMC,iBAAiB,GAAG,CAACC,aAAD,EAAeC,cAAf,EAA8BC,OAA9B,EAAsCC,QAAtC,EAA+CL,MAA/C,MAA2D;AACxFZ,EAAAA,IAAI,EAAEN,YADkF;AAExFW,EAAAA,OAAO,EAAE;AAACS,IAAAA,aAAD;AAAeC,IAAAA,cAAf;AAA8BC,IAAAA,OAA9B;AAAsCC,IAAAA,QAAtC;AAA+CL,IAAAA;AAA/C;AAF+E,CAA3D,CAA1B;AAKP,OAAO,MAAMM,kBAAkB,GAAG,CAACJ,aAAD,EAAeC,cAAf,EAA8BC,OAA9B,EAAsCC,QAAtC,EAA+CL,MAA/C,MAA2D;AACzFZ,EAAAA,IAAI,EAAEL,sBADmF;AAEzFU,EAAAA,OAAO,EAAE;AAACS,IAAAA,aAAD;AAAeC,IAAAA,cAAf;AAA8BC,IAAAA,OAA9B;AAAsCC,IAAAA,QAAtC;AAA+CL,IAAAA;AAA/C;AAFgF,CAA3D,CAA3B;AAKP,OAAO,MAAMO,UAAU,GAAIC,MAAD,KAAa;AACnCpB,EAAAA,IAAI,EAAET,WAD6B;AAEnCc,EAAAA,OAAO,EAAEe;AAF0B,CAAb,CAAnB;AAKP,OAAO,MAAMC,UAAU,GAAG,CAACP,aAAD,EAAeC,cAAf,EAA8BO,QAA9B,MAA4C;AAClEtB,EAAAA,IAAI,EAAEV,WAD4D;AAElEe,EAAAA,OAAO,EAAE;AAACS,IAAAA,aAAD;AAAeC,IAAAA,cAAf;AAA8BO,IAAAA;AAA9B;AAFyD,CAA5C,CAAnB;AAKP,OAAO,MAAMC,kBAAkB,GAAG,CAACZ,YAAD,EAAcC,MAAd,MAA0B;AACxDZ,EAAAA,IAAI,EAACR,oBADmD;AAExDa,EAAAA,OAAO,EAAC;AAACM,IAAAA,YAAD;AAAcC,IAAAA;AAAd;AAFgD,CAA1B,CAA3B","sourcesContent":["import {\n    GET_MEMBERS,\n    GET_MEMBERS_SUCCESS,\n    GET_CHATS,\n    GET_CHATS_SUCCESS,\n    CREATE_CHAT,\n    CHANGE_CHAT,\n    UPDATE_SELECTED_USER,\n    SEARCH_MEMBER,\n    SEND_MESSAGE,\n    REPLY_BY_SELECTED_USER,\n    WATCH_CHAT_MEMBERS,\n    WATCH_CHAT_SUCCESS,\n    WATCH_ALL_CHAT_SUCCESS\n    \n} from '../../redux/actionTypes';\n\n\nexport const  watchfetchChatMember = () => ({\n    type: WATCH_CHAT_MEMBERS\n})\n\nexport const  watchfetchChat = () => ({\n    type: WATCH_CHAT_SUCCESS\n})\n\nexport const  watchfetchAllChat = () => ({\n    type: WATCH_ALL_CHAT_SUCCESS\n})\n\nexport const getChats = (chats) => ({\n    type: GET_CHATS,\n    payload:chats\n});\n\nexport const getMembers = () => ({\n    type: GET_MEMBERS\n});\n\nexport const searchMember = (keyword) => ({\n    type: SEARCH_MEMBER,\n    payload: keyword\n});\n\nexport const getMembersSuccess = (chats) => {\n    return ({\n        type: GET_MEMBERS_SUCCESS,\n        payload: {chats}\n    })\n};\n\n\nexport const getChatsSuccess = (chats, selectedUser,online) => {\n    return{\n        type: GET_CHATS_SUCCESS,\n        payload: { chats, selectedUser,online }\n    }\n}\n\nexport const sendMessageToChat = (currentUserId,selectedUserId,message,allchats,online) => ({\n    type: SEND_MESSAGE,\n    payload: {currentUserId,selectedUserId,message,allchats,online}\n});\n\nexport const replyMessageToChat = (currentUserId,selectedUserId,message,allchats,online) => ({\n    type: REPLY_BY_SELECTED_USER,\n    payload: {currentUserId,selectedUserId,message,allchats,online}\n});\n\nexport const changeChat = (userId) => ({\n    type: CHANGE_CHAT,\n    payload: userId\n});\n\nexport const createChat = (currentUserId,selectedUserId,allChats) => ({\n    type: CREATE_CHAT,\n    payload: {currentUserId,selectedUserId,allChats}\n});\n\nexport const updateSelectedUser = (selectedUser,online) => ({\n    type:UPDATE_SELECTED_USER,\n    payload:{selectedUser,online}\n})\n\n\n"]},"metadata":{},"sourceType":"module"}