{"ast":null,"code":"import { ADD_TO_CART, DECREMENT_QTY, REMOVE_FROM_CART } from '../../../redux/actionTypes';\nconst INIT_STATE = {\n  cart: []\n};\nexport default ((state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      const productId = action.payload.product.id;\n\n      if (state.cart.findIndex(product => product.id === productId) !== -1) {\n        const cart = state.cart.reduce((cartAcc, product) => {\n          if (product.id === productId) {\n            cartAcc.push({ ...product,\n              qty: product.qty + 1,\n              sum: product.price * (product.qty + 1)\n            }); // Increment qty\n          } else {\n            cartAcc.push(product);\n          }\n\n          return cartAcc;\n        }, []);\n        return { ...state,\n          cart\n        };\n      }\n\n      return { ...state,\n        cart: [...state.cart, { ...action.payload.product,\n          qty: action.payload.qty,\n          sum: action.payload.product.price * action.payload.qty\n        }]\n      };\n\n    case DECREMENT_QTY:\n      if (state.cart.findIndex(product => product.id === action.productId) !== -1) {\n        const cart = state.cart.reduce((cartAcc, product) => {\n          if (product.id === action.productId && product.qty > 1) {\n            cartAcc.push({ ...product,\n              qty: product.qty - 1,\n              sum: product.price * (product.qty - 1)\n            }); // Decrement qty\n          } else {\n            cartAcc.push(product);\n          }\n\n          return cartAcc;\n        }, []);\n        return { ...state,\n          cart\n        };\n      }\n\n      return { ...state,\n        cart: [...state.cart, { ...action.product,\n          qty: action.qty,\n          sum: action.product.price * action.qty\n        }]\n      };\n\n    case REMOVE_FROM_CART:\n      return {\n        cart: state.cart.filter(item => item.id !== action.product_id.id)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/src/redux/ecommerce/cart/reducer.js"],"names":["ADD_TO_CART","DECREMENT_QTY","REMOVE_FROM_CART","INIT_STATE","cart","state","action","type","productId","payload","product","id","findIndex","reduce","cartAcc","push","qty","sum","price","filter","item","product_id"],"mappings":"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","sourcesContent":["import {\n    ADD_TO_CART,\n    DECREMENT_QTY,\n    REMOVE_FROM_CART,\n} from '../../../redux/actionTypes';\n\nconst INIT_STATE = {\n    cart: [],\n};\n\nexport default (state = INIT_STATE, action) => {\n\n    switch (action.type) {\n        case ADD_TO_CART:\n        const productId = action.payload.product.id\n        if (state.cart.findIndex(product => product.id === productId) !== -1) {\n            const cart = state.cart.reduce((cartAcc, product) => {\n                if (product.id === productId) {\n                    cartAcc.push({ ...product, qty: product.qty + 1, sum: (product.price) * (product.qty + 1) }) // Increment qty\n                } else {\n                    cartAcc.push(product)\n                }\n                return cartAcc\n            }, [])\n\n            return { ...state, cart }\n        }\n\n        return { ...state, cart: [...state.cart, { ...action.payload.product, qty: action.payload.qty, sum: (action.payload.product.price) * action.payload.qty }] }\n\n        case DECREMENT_QTY:\n            if (state.cart.findIndex(product => product.id === action.productId) !== -1) {\n                const cart = state.cart.reduce((cartAcc, product) => {\n                    if (product.id === action.productId && product.qty > 1) {\n                        cartAcc.push({ ...product, qty: product.qty - 1, sum: (product.price) * (product.qty - 1) }) // Decrement qty\n                    } else {\n                        cartAcc.push(product)\n                    }\n                    return cartAcc\n                }, [])\n\n                return { ...state, cart }\n            }\n\n        return { ...state, cart: [...state.cart, { ...action.product, qty: action.qty, sum: action.product.price * action.qty }] }\n        \n\n        case REMOVE_FROM_CART:\n            return {\n                cart: state.cart.filter(item => item.id !== action.product_id.id)\n            }\n            \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}