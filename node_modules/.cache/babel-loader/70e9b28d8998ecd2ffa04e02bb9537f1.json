{"ast":null,"code":"// Copyright (c) 2012 The Chromium Authors, Vladimirs. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * focus-outline-manager\n *\n * Watch users keyboard input and manage the focus outline visibility\n */\n\n/**\n * The class name to set on the document element.\n * @const\n */\nvar CLASS_NAME = 'focus-outline-hidden';\n/**\n * This class sets a CSS class name on the HTML element when a user presses the\n * tab key. It removes the class name when the user clicks anywhere.\n *\n * This allows you to write CSS like this:\n *\n * html.focus-outline-hidden *:focus {\n *     outline: none;\n * }\n *\n * And the outline will only be shown if the user uses the keyboard to get to it.\n *\n * @constructor\n */\n\nfunction FocusOutlineManager() {\n  var that = this;\n  document.addEventListener('keydown', function (e) {\n    that.focusByKeyboard = true;\n  }, true);\n  document.addEventListener('mousedown', function (e) {\n    that.focusByKeyboard = false;\n  }, true);\n  document.addEventListener('focus', function (event) {\n    // Update visibility only when focus is actually changed.\n    that.updateVisibility();\n  }, true);\n  document.addEventListener('focusout', function (event) {\n    window.setTimeout(function () {\n      if (!document.hasFocus()) {\n        that.focusByKeyboard = true;\n        that.updateVisibility();\n      }\n    }, 0);\n  });\n  this.updateVisibility();\n}\n\nFocusOutlineManager.prototype = {\n  /**\n   * Whether focus change is triggered by TAB key.\n   * @type {boolean}\n   * @private\n   */\n  focusByKeyboard: true,\n  updateVisibility: function () {\n    this.hidden = !this.focusByKeyboard;\n  },\n\n  /**\n   * Whether the focus outline should be hidden.\n   * @type {boolean}\n   */\n  set hidden(hidden) {\n    document.documentElement.classList.toggle(CLASS_NAME, hidden);\n  },\n\n  get hidden() {\n    return document.documentElement.classList.contains(CLASS_NAME);\n  }\n\n};\nnew FocusOutlineManager();","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/node_modules/focus-outline-manager/focus-outline-manager.js"],"names":["CLASS_NAME","FocusOutlineManager","that","document","addEventListener","e","focusByKeyboard","event","updateVisibility","window","setTimeout","hasFocus","prototype","hidden","documentElement","classList","toggle","contains"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAG,sBAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,GAAgC;AAC5B,MAAIC,IAAI,GAAG,IAAX;AAEAC,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,UAAUC,CAAV,EAAa;AAC9CH,IAAAA,IAAI,CAACI,eAAL,GAAuB,IAAvB;AACH,GAFD,EAEG,IAFH;AAIAH,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,UAAUC,CAAV,EAAa;AAChDH,IAAAA,IAAI,CAACI,eAAL,GAAuB,KAAvB;AACH,GAFD,EAEG,IAFH;AAIAH,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,UAAUG,KAAV,EAAiB;AAChD;AACAL,IAAAA,IAAI,CAACM,gBAAL;AACH,GAHD,EAGG,IAHH;AAKAL,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsC,UAAUG,KAAV,EAAiB;AACnDE,IAAAA,MAAM,CAACC,UAAP,CAAkB,YAAY;AAC1B,UAAI,CAACP,QAAQ,CAACQ,QAAT,EAAL,EAA0B;AACtBT,QAAAA,IAAI,CAACI,eAAL,GAAuB,IAAvB;AACAJ,QAAAA,IAAI,CAACM,gBAAL;AACH;AACJ,KALD,EAKG,CALH;AAMH,GAPD;AASA,OAAKA,gBAAL;AACH;;AAEDP,mBAAmB,CAACW,SAApB,GAAgC;AAC5B;AACJ;AACA;AACA;AACA;AACIN,EAAAA,eAAe,EAAE,IANW;AAQ5BE,EAAAA,gBAAgB,EAAE,YAAY;AAC1B,SAAKK,MAAL,GAAc,CAAC,KAAKP,eAApB;AACH,GAV2B;;AAY5B;AACJ;AACA;AACA;AACI,MAAIO,MAAJ,CAAWA,MAAX,EAAmB;AACfV,IAAAA,QAAQ,CAACW,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0ChB,UAA1C,EAAsDa,MAAtD;AACH,GAlB2B;;AAoB5B,MAAIA,MAAJ,GAAa;AACT,WAAOV,QAAQ,CAACW,eAAT,CAAyBC,SAAzB,CAAmCE,QAAnC,CAA4CjB,UAA5C,CAAP;AACH;;AAtB2B,CAAhC;AAyBA,IAAIC,mBAAJ","sourcesContent":["// Copyright (c) 2012 The Chromium Authors, Vladimirs. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * focus-outline-manager\n *\n * Watch users keyboard input and manage the focus outline visibility\n */\n\n/**\n * The class name to set on the document element.\n * @const\n */\nvar CLASS_NAME = 'focus-outline-hidden';\n\n/**\n * This class sets a CSS class name on the HTML element when a user presses the\n * tab key. It removes the class name when the user clicks anywhere.\n *\n * This allows you to write CSS like this:\n *\n * html.focus-outline-hidden *:focus {\n *     outline: none;\n * }\n *\n * And the outline will only be shown if the user uses the keyboard to get to it.\n *\n * @constructor\n */\nfunction FocusOutlineManager () {\n    var that = this;\n\n    document.addEventListener('keydown', function (e) {\n        that.focusByKeyboard = true;\n    }, true);\n\n    document.addEventListener('mousedown', function (e) {\n        that.focusByKeyboard = false;\n    }, true);\n\n    document.addEventListener('focus', function (event) {\n        // Update visibility only when focus is actually changed.\n        that.updateVisibility();\n    }, true);\n\n    document.addEventListener('focusout', function (event) {\n        window.setTimeout(function () {\n            if (!document.hasFocus()) {\n                that.focusByKeyboard = true;\n                that.updateVisibility();\n            }\n        }, 0);\n    });\n\n    this.updateVisibility();\n}\n\nFocusOutlineManager.prototype = {\n    /**\n     * Whether focus change is triggered by TAB key.\n     * @type {boolean}\n     * @private\n     */\n    focusByKeyboard: true,\n\n    updateVisibility: function () {\n        this.hidden = !this.focusByKeyboard;\n    },\n\n    /**\n     * Whether the focus outline should be hidden.\n     * @type {boolean}\n     */\n    set hidden(hidden) {\n        document.documentElement.classList.toggle(CLASS_NAME, hidden);\n    },\n\n    get hidden() {\n        return document.documentElement.classList.contains(CLASS_NAME);\n    }\n};\n\nnew FocusOutlineManager();\n"]},"metadata":{},"sourceType":"script"}