{"ast":null,"code":"const React = require('react');\n\nconst hoistStatics = require('hoist-non-react-statics');\n\nconst objectAssign = require('object-assign');\n\nconst Cookies = require('universal-cookie');\n\nconst subscribes = {};\nlet translations = {};\nlet defaultLanguage = 'en';\nlet language = 'en';\nlet count = 0;\nlet cookies;\nlet cookieName = 'language';\nlet cookieOption = {\n  path: '/',\n  maxAge: 157680000\n};\n\nfunction subscribe(cb) {\n  const newId = count;\n  subscribes[newId] = cb;\n  count += 1;\n  return newId;\n}\n\nfunction unsubscribe(id) {\n  delete subscribes[id];\n}\n\nfunction triggerSubscriptions() {\n  Object.keys(subscribes).forEach(id => {\n    new Promise(resolve => {\n      subscribes[id]();\n      resolve();\n    }).then();\n  });\n}\n\nfunction getLanguages() {\n  return Object.keys(translations);\n}\n\nfunction getDefaultLanguage() {\n  return defaultLanguage;\n}\n\nfunction getLanguage() {\n  return language;\n}\n\nfunction setDefaultLanguage(lang) {\n  defaultLanguage = lang;\n  language = lang;\n}\n\nfunction setLanguage(lang) {\n  if (getLanguages().indexOf(lang) === -1) {\n    return;\n  }\n\n  language = lang;\n  triggerSubscriptions();\n\n  if (cookies && process.browser) {\n    cookies.set(cookieName, language, cookieOption);\n  }\n}\n\nfunction setLanguageCookie(name, option, reqCookie) {\n  cookies = new Cookies(reqCookie);\n  cookieName = name || cookieName;\n  cookieOption = Object.assign({}, cookieOption, option);\n  const lang = cookies.get(name);\n\n  if (lang) {\n    setLanguage(lang);\n  }\n}\n\nfunction setTranslations(userTranslations) {\n  translations = userTranslations;\n  triggerSubscriptions();\n}\n\nfunction setDefaultTranslations(userTranslations) {\n  if (getLanguages().length !== 0) {\n    setTranslations(userTranslations);\n    return;\n  }\n\n  translations = userTranslations;\n}\n\nfunction getTranslation(lang) {\n  return translations[lang];\n}\n\nfunction t(path, params, lang) {\n  const selectLang = lang || language;\n\n  function fallback() {\n    if (selectLang !== defaultLanguage) {\n      return t(path, params, defaultLanguage);\n    }\n\n    return path;\n  }\n\n  let translationObj = getTranslation(selectLang);\n\n  if (!translationObj) {\n    return fallback();\n  }\n\n  const translationKeys = path.split('.');\n  let translation = '';\n  translationKeys.forEach(key => {\n    const temp = translationObj[key];\n\n    if (typeof translationObj[key] === 'object') {\n      translationObj = translationObj[key];\n    } else if (typeof temp === 'string') {\n      translation = temp;\n    }\n  });\n\n  if (!translation) {\n    return fallback();\n  }\n\n  if (params) {\n    Object.keys(params).forEach(key => {\n      const replace = `{${key}}`;\n      translation = translation.replace(replace, params[key]);\n    });\n  }\n\n  return translation;\n}\n\nfunction translate(Component) {\n  class TranslatedComponet extends React.Component {\n    componentDidMount() {\n      this.id = subscribe(() => this.forceUpdate());\n    }\n\n    componentWillUnmount() {\n      unsubscribe(this.id);\n    }\n\n    render() {\n      return React.createElement(Component, objectAssign({}, this.props, {\n        t: (key, args, lang) => t(key, args, lang)\n      }));\n    }\n\n  }\n\n  return hoistStatics(TranslatedComponet, Component);\n}\n\nmodule.exports = {\n  getLanguages,\n  getDefaultLanguage,\n  getLanguage,\n  setDefaultLanguage,\n  setLanguage,\n  setLanguageCookie,\n  setDefaultTranslations,\n  setTranslations,\n  translate,\n  subscribe,\n  unsubscribe,\n  t\n};","map":{"version":3,"sources":["/home/kunal/Kunal/THEMES/theme/node_modules/react-switch-lang/index.js"],"names":["React","require","hoistStatics","objectAssign","Cookies","subscribes","translations","defaultLanguage","language","count","cookies","cookieName","cookieOption","path","maxAge","subscribe","cb","newId","unsubscribe","id","triggerSubscriptions","Object","keys","forEach","Promise","resolve","then","getLanguages","getDefaultLanguage","getLanguage","setDefaultLanguage","lang","setLanguage","indexOf","process","browser","set","setLanguageCookie","name","option","reqCookie","assign","get","setTranslations","userTranslations","setDefaultTranslations","length","getTranslation","t","params","selectLang","fallback","translationObj","translationKeys","split","translation","key","temp","replace","translate","Component","TranslatedComponet","componentDidMount","forceUpdate","componentWillUnmount","render","createElement","props","args","module","exports"],"mappings":"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","sourcesContent":["const React = require('react');\nconst hoistStatics = require('hoist-non-react-statics');\nconst objectAssign = require('object-assign');\nconst Cookies = require('universal-cookie');\n\nconst subscribes = {};\n\nlet translations = {};\nlet defaultLanguage = 'en';\nlet language = 'en';\nlet count = 0;\nlet cookies;\nlet cookieName = 'language';\nlet cookieOption = { path: '/', maxAge: 157680000 };\n\nfunction subscribe(cb) {\n  const newId = count;\n  subscribes[newId] = cb;\n  count += 1;\n  return newId;\n}\n\nfunction unsubscribe(id) {\n  delete subscribes[id];\n}\n\nfunction triggerSubscriptions() {\n  Object.keys(subscribes).forEach((id) => {\n    new Promise((resolve) => {\n      subscribes[id]();\n      resolve();\n    }).then();\n  });\n}\n\nfunction getLanguages() {\n  return Object.keys(translations);\n}\n\nfunction getDefaultLanguage() {\n  return defaultLanguage;\n}\n\nfunction getLanguage() {\n  return language;\n}\n\nfunction setDefaultLanguage(lang) {\n  defaultLanguage = lang;\n  language = lang;\n}\n\nfunction setLanguage(lang) {\n  if (getLanguages().indexOf(lang) === -1) {\n    return;\n  }\n\n  language = lang;\n  triggerSubscriptions();\n\n  if (cookies && process.browser) {\n    cookies.set(cookieName, language, cookieOption);\n  }\n}\n\nfunction setLanguageCookie(name, option, reqCookie) {\n  cookies = new Cookies(reqCookie);\n  cookieName = name || cookieName;\n  cookieOption = Object.assign({}, cookieOption, option);\n\n  const lang = cookies.get(name);\n\n  if (lang) {\n    setLanguage(lang);\n  }\n}\n\nfunction setTranslations(userTranslations) {\n  translations = userTranslations;\n  triggerSubscriptions();\n}\n\nfunction setDefaultTranslations(userTranslations) {\n  if (getLanguages().length !== 0) {\n    setTranslations(userTranslations);\n    return;\n  }\n  translations = userTranslations;\n}\n\nfunction getTranslation(lang) {\n  return translations[lang];\n}\n\nfunction t(path, params, lang) {\n  const selectLang = lang || language;\n\n  function fallback() {\n    if (selectLang !== defaultLanguage) {\n      return t(path, params, defaultLanguage);\n    }\n    return path;\n  }\n\n  let translationObj = getTranslation(selectLang);\n\n  if (!translationObj) {\n    return fallback();\n  }\n\n  const translationKeys = path.split('.');\n  let translation = '';\n\n  translationKeys.forEach((key) => {\n    const temp = translationObj[key];\n    if (typeof translationObj[key] === 'object') {\n      translationObj = translationObj[key];\n    } else if (typeof temp === 'string') {\n      translation = temp;\n    }\n  });\n\n  if (!translation) {\n    return fallback();\n  }\n\n  if (params) {\n    Object.keys(params).forEach((key) => {\n      const replace = `{${key}}`;\n      translation = translation.replace(replace, params[key]);\n    });\n  }\n\n  return translation;\n}\n\nfunction translate(Component) {\n  class TranslatedComponet extends React.Component {\n    componentDidMount() {\n      this.id = subscribe(() => this.forceUpdate());\n    }\n\n    componentWillUnmount() {\n      unsubscribe(this.id);\n    }\n\n    render() {\n      return React.createElement(\n        Component,\n        objectAssign({}, this.props, { t: (key, args, lang) => t(key, args, lang) }),\n      );\n    }\n  }\n\n  return hoistStatics(TranslatedComponet, Component);\n}\n\nmodule.exports = {\n  getLanguages,\n  getDefaultLanguage,\n  getLanguage,\n  setDefaultLanguage,\n  setLanguage,\n  setLanguageCookie,\n  setDefaultTranslations,\n  setTranslations,\n  translate,\n  subscribe,\n  unsubscribe,\n  t,\n};\n"]},"metadata":{},"sourceType":"script"}